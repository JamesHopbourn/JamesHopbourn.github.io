<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>James Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jameshopbourn.github.io/"/>
  <updated>2022-05-25T00:36:44.231Z</updated>
  <id>https://jameshopbourn.github.io/</id>
  
  <author>
    <name>James Hopbourn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>生财有术语录</title>
    <link href="https://jameshopbourn.github.io/2021/04/09/%E7%94%9F%E8%B4%A2%E6%9C%89%E6%9C%AF/"/>
    <id>https://jameshopbourn.github.io/2021/04/09/%E7%94%9F%E8%B4%A2%E6%9C%89%E6%9C%AF/</id>
    <published>2021-04-09T04:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.231Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>2021-02-24 8:57 Wednesday<br>亦仁：读万卷书，不如行万里路；行万里路，不如阅人无数。在生财有术阅读很多精华帖内容是很重要的一步，通过生财有术链接更多有趣、有料、同频的人，也是很重要的一步。</p></li><li><p>2021-04-02 19:08 Friday<br>亦仁：一个人的「审美」能力决定他做事的水平。这里的「审美」指广义的「审美」：他所见过好的、高水平的、厉害的人或事。</p></li></ul><a id="more"></a><ul><li><p>2021-04-01 10:52 Thursday<br>我觉得生财日历共读营最大的价值，在于大家群策群力，把自己对赚钱的思考和案例毫无保留地分享。集体的智慧带来的价值，远大于一个人的输出。</p></li><li><p>2021-03-31 10:00 Wednesday<br>昨天龙珠群有‮位一‬圈友分享，说他之前同时进行‮个几‬项目，遇‮了到‬瓶颈，不得‮断已‬臂求生，最后‮成做‬了。他说生财有‮合术‬伙人光合‮见在‬面会上分享的一句话，一直‮励激‬和启‮着发‬他，这句话就是：我们就‮一是‬个普通人，想做成一件‮已事‬经极其困难，想要赢，只‮活有‬成一道激光，像激光一‮专样‬注和聚焦，我们才‮赢有‬的概率。</p></li><li><p>2021-03-31 6:46 Wednesday<br>王兴：参观好公司是一种极其有效的学习方法，值得花时间、花钱，甚至花股份。最著名的例子:79年12月，乔布斯为了换取参观施乐PARC的机会，给施乐以100万美元买10万股苹果pre-IPO股票的权利。80年12月，苹果上市，这笔股票值1700万美元。苹果得到的则是划时代的图形界面创意。</p></li><li><p>2021-03-31 6:20 Wednesday<br>明白1：[[2021 年 3 月 28 日 | 关键词：勤奋]]</p></li><li><p>2021-03-31 6:18 Wednesday<br>明白1：在人生的任何阶段，拥有什么，就要用好什么。而不是把注意力都放在你没有的东西上。否则，你向往的生活，永远都只会在别处。</p></li><li><p>2021-03-31 5:56 Wednesday<br>明白1：焦虑程度 = 欲望/能力。<br>解决焦虑的2种方式，提升能力和降低欲望。<br>像我见到这些大佬的成绩，也会焦虑，我采取的方式会屏蔽，然后努力自我提升，回过头再看看他们，发现就没这么焦虑了。</p></li><li><p>2021-03-28 17:18 Sunday<br><mark>昨天见面会上，老华老师有一句金句让我感触很深：时间是很可怕的，只要5年就能把没有聚焦的人刷掉。做少而正确的决策，然后下大注。一生三五个好的决策，足以彻底改变你的现状，并带来成百上千倍的回报。<mark style="background: pink"></p></li><li><p>2021-03-28 7:46 Sunday<br>以千万、亿万计的富人，他们发家途径无外乎四：一是办企业，二是当高管，三是炒房，四是炒股。</p></li><li><p>2021-03-28 6:33 Sunday<br>生财有术2500多篇精华，1000多万字，大概相当于100本商业图书的信息量。</p></li><li><p>2021-03-28 6:32 Sunday<br>一个优‮的秀‬社群，会生产‮样三‬东西：第一样，生产优‮内质‬容，第二样，生产可‮关靠‬系，也就是交‮朋个‬友，第三样，生产成‮案功‬例，也就是有‮通人‬过这个社‮成群‬功了，比如在生财‮术有‬赚到钱，在学习社群学习‮新到‬知识。</p></li><li><p>2021-03-28 6:32 Sunday<br>亦仁：足够的信息输入后，看问题的视角会更加多元，分析问题也会更有深度，也就是具备了洞察力。人与人认知上最大的竞争，其实是信息输入量的竞争。</p></li><li><p>2021-03-21 16:50 Sunday<br><a href="https://www.linkedin.com/pulse/your-life-journey-exercise-ray-dalio/" target="_blank" rel="noopener">https://www.linkedin.com/pulse/your-life-journey-exercise-ray-dalio/</a> 人的一生</p></li><li><p>2021-03-18 15:40 Thursday<br>明白1：任何积累都需要时间，而且必然需要漫长的时间。也正因如此，大多数人才不肯积累，不愿积累，甚至不屑于积累。这句话有啥启发没？</p></li><li><p>2021-03-16 23:57 Tuesday<br>刀姐doris：碰到问题和矛盾，不要停留在抱怨，而是问自己：「如果情况是这样，我能怎么办？」或者「还有什么办法是我可以通过咨询别人找到解决方案的吗？」换言之，不要假设 「解决方案只有一种」所以「我不得不XX］ ，问题的解决方案总是比想象中的要多，看待问题的方式也可以有很多种，原因也不止一种，就看你是不是真的想竭尽全力去解决。<br>竭尽全力=竭尽能力+竭尽资源+竭尽求援。</p></li><li><p>2021-03-15 21:52 Monday<br>V先生：我们点赞一条朋友圈，与其说是点赞优质内容，不如说是点赞亲密关系，内容好不好是次要的，关系亲不亲是首要的，而是通过一次次点赞来表达和确认：我关注你、我支持你、我们关系很近。</p></li><li><p>2021-03-08 22:33 Monday<br>caoz：懂A，又懂B才是你的价值。放弃A，追求B，你什么都不是。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;2021-02-24 8:57 Wednesday&lt;br&gt;亦仁：读万卷书，不如行万里路；行万里路，不如阅人无数。在生财有术阅读很多精华帖内容是很重要的一步，通过生财有术链接更多有趣、有料、同频的人，也是很重要的一步。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2021-04-02 19:08 Friday&lt;br&gt;亦仁：一个人的「审美」能力决定他做事的水平。这里的「审美」指广义的「审美」：他所见过好的、高水平的、厉害的人或事。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="生财有术" scheme="https://jameshopbourn.github.io/tags/%E7%94%9F%E8%B4%A2%E6%9C%89%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>i++ 和 ++i 区别</title>
    <link href="https://jameshopbourn.github.io/2020/12/30/ipp-ppi/"/>
    <id>https://jameshopbourn.github.io/2020/12/30/ipp-ppi/</id>
    <published>2020-12-30T13:40:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<p>以汇编的角度来看 i++ 和 ++i 区别</p><a id="more"></a><h3 id="工具版本"><a href="#工具版本" class="headerlink" title="工具版本"></a>工具版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">➜ gcc --version</span><br><span class="line">Configured with: --prefix&#x3D;&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;usr --with-gxx-include-dir&#x3D;&#x2F;Library&#x2F;Developer&#x2F;CommandLineTools&#x2F;SDKs&#x2F;MacOSX.sdk&#x2F;usr&#x2F;include&#x2F;c++&#x2F;4.2.1</span><br><span class="line">Apple clang version 12.0.0 (clang-1200.0.32.28)</span><br><span class="line">Target: x86_64-apple-darwin19.6.0</span><br><span class="line">Thread model: posix</span><br><span class="line">InstalledDir: &#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Toolchains&#x2F;XcodeDefault.xctoolchain&#x2F;usr&#x2F;bin</span><br><span class="line"></span><br><span class="line">➜ objdump --version</span><br><span class="line">GNU objdump (GNU Binutils) 2.35.1</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">This program is free software; you may redistribute it under the terms of</span><br><span class="line">the GNU General Public License version 3 or (at your option) any later version.</span><br><span class="line">This program has absolutely no warranty.</span><br><span class="line"></span><br><span class="line">➜ sed --version</span><br><span class="line">sed (GNU sed) 4.8</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;https:&#x2F;&#x2F;gnu.org&#x2F;licenses&#x2F;gpl.html&gt;.</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">Written by Jay Fenlason, Tom Lord, Ken Pizzini,</span><br><span class="line">Paolo Bonzini, Jim Meyering, and Assaf Gordon.</span><br><span class="line"></span><br><span class="line">This sed program was built without SELinux support.</span><br><span class="line"></span><br><span class="line">GNU sed home page: &lt;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;sed&#x2F;&gt;.</span><br><span class="line">General help using GNU software: &lt;https:&#x2F;&#x2F;www.gnu.org&#x2F;gethelp&#x2F;&gt;.</span><br><span class="line">E-mail bug reports to: &lt;bug-sed@gnu.org&gt;.</span><br><span class="line"></span><br><span class="line">➜ awk --version</span><br><span class="line">GNU Awk 5.1.0, API: 3.0 (GNU MPFR 4.1.0, GNU MP 6.2.1)</span><br><span class="line">Copyright (C) 1989, 1991-2020 Free Software Foundation.</span><br><span class="line"></span><br><span class="line">This program is free software; you can redistribute it and&#x2F;or modify</span><br><span class="line">it under the terms of the GNU General Public License as published by</span><br><span class="line">the Free Software Foundation; either version 3 of the License, or</span><br><span class="line">(at your option) any later version.</span><br><span class="line"></span><br><span class="line">This program is distributed in the hope that it will be useful,</span><br><span class="line">but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line">GNU General Public License for more details.</span><br><span class="line"></span><br><span class="line">You should have received a copy of the GNU General Public License</span><br><span class="line">along with this program. If not, see http:&#x2F;&#x2F;www.gnu.org&#x2F;licenses&#x2F;.</span><br></pre></td></tr></table></figure><h3 id="初次小试：i"><a href="#初次小试：i" class="headerlink" title="初次小试：i++"></a>初次小试：i++</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">int i &#x3D; 1;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pbpaste &gt; i++.c &amp;&amp; gcc i++.c -o i++ &amp;&amp; objdump -d -j .text -M intel i++|gsed &#39;1,7d ; s&#x2F;^.\&#123;36\&#125;&#x2F;&#x2F;&#39;|awk &#39;&#123;printf(&quot;%02d %s\n&quot;, NR, $0)&#125;&#39;</span><br><span class="line"></span><br><span class="line">01 push   rbp</span><br><span class="line">02 mov    rbp,rsp</span><br><span class="line">03 xor    eax,eax</span><br><span class="line">04 mov    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">05 mov    ecx,DWORD PTR [rbp-0x4]</span><br><span class="line">06 add    ecx,0x1</span><br><span class="line">07 mov    DWORD PTR [rbp-0x4],ecx</span><br><span class="line">08 pop    rbp</span><br><span class="line">09 ret</span><br></pre></td></tr></table></figure><h3 id="初次小试：-i"><a href="#初次小试：-i" class="headerlink" title="初次小试：++i"></a>初次小试：++i</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">int i &#x3D; 1;</span><br><span class="line">++i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pbpaste &gt; ++i.c &amp;&amp; gcc ++i.c -o ++i &amp;&amp; objdump -d -j .text -M intel ++i|gsed &#39;1,7d ; s&#x2F;^.\&#123;36\&#125;&#x2F;&#x2F;&#39;|awk &#39;&#123;printf(&quot;%02d %s\n&quot;, NR, $0)&#125;&#39;</span><br><span class="line"></span><br><span class="line">01 push   rbp</span><br><span class="line">02 mov    rbp,rsp</span><br><span class="line">03 xor    eax,eax</span><br><span class="line">04 mov    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">05 mov    ecx,DWORD PTR [rbp-0x4]</span><br><span class="line">06 add    ecx,0x1</span><br><span class="line">07 mov    DWORD PTR [rbp-0x4],ecx</span><br><span class="line">08 pop    rbp</span><br><span class="line">09 ret</span><br></pre></td></tr></table></figure><h3 id="修改再试：i"><a href="#修改再试：i" class="headerlink" title="修改再试：i++"></a>修改再试：i++</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">int i &#x3D; 1;</span><br><span class="line">i &#x3D; i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pbpaste &gt; i++.c &amp;&amp; gcc i++.c -o i++ &amp;&amp; objdump -d -j .text -M intel i++|gsed &#39;1,7d ; s&#x2F;^.\&#123;36\&#125;&#x2F;&#x2F;&#39;|awk &#39;&#123;printf(&quot;%02d %s\n&quot;, NR, $0)&#125;&#39;</span><br><span class="line"></span><br><span class="line">01 push   rbp</span><br><span class="line">02 mov    rbp,rsp</span><br><span class="line">03 xor    eax,eax</span><br><span class="line">04 mov    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">05 mov    ecx,DWORD PTR [rbp-0x4]</span><br><span class="line">06 mov    edx,ecx</span><br><span class="line">07 add    edx,0x1</span><br><span class="line">08 mov    DWORD PTR [rbp-0x4],edx</span><br><span class="line">09 mov    DWORD PTR [rbp-0x4],ecx</span><br><span class="line">10 pop    rbp</span><br><span class="line">11 ret</span><br></pre></td></tr></table></figure><h3 id="再次小试：-i"><a href="#再次小试：-i" class="headerlink" title="再次小试：++i"></a>再次小试：++i</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">int i &#x3D; 1;</span><br><span class="line">i &#x3D; ++i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pbpaste &gt; ++i.c &amp;&amp; gcc ++i.c -o ++i &amp;&amp; objdump -d -j .text -M intel ++i|gsed &#39;1,7d ; s&#x2F;^.\&#123;36\&#125;&#x2F;&#x2F;&#39;|awk &#39;&#123;printf(&quot;%02d %s\n&quot;, NR, $0)&#125;&#39;</span><br><span class="line"></span><br><span class="line">01 push   rbp</span><br><span class="line">02 mov    rbp,rsp</span><br><span class="line">03 xor    eax,eax</span><br><span class="line">04 mov    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">05 mov    ecx,DWORD PTR [rbp-0x4]</span><br><span class="line">06 add    ecx,0x1</span><br><span class="line">07 mov    DWORD PTR [rbp-0x4],ecx</span><br><span class="line">08 mov    DWORD PTR [rbp-0x4],ecx</span><br><span class="line">09 pop    rbp</span><br><span class="line">10 ret</span><br></pre></td></tr></table></figure><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>i++ 相比较于 ++i 多了 <code>06 mov    edx,ecx</code>，常量 <code>1</code> 先赋值给 <code>[rbp-0x4]</code> 传递给 <code>ecx</code>，<code>ecx</code> 再赋值给 <code>edx</code>，实际操作是对 <code>edx</code> 操作。操作之后看似赋值给了 <code>[rbp-0x4]</code> 但是因为 <code>ecx</code> 的覆盖导致 <code>i</code> 数值不变。<br>++i 是将常量 <code>1</code> 先赋值给 <code>[rbp-0x4]</code> 传递给 <code>ecx</code>，然后直接对 <code>ecx</code> 操作并赋值回 <code>[rbp-0x4]</code></p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://mp.weixin.qq.com/s/d2TKnw3PYzs2KuFGjkNKoQ" target="_blank" rel="noopener">用这个工具看了i++和++i的汇编代码，小白也能明白它们的区别</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以汇编的角度来看 i++ 和 ++i 区别&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="C语言" scheme="https://jameshopbourn.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Quantumult X 快速入门教程</title>
    <link href="https://jameshopbourn.github.io/2020/12/18/Quantumult%20Quickstart%20Guide/"/>
    <id>https://jameshopbourn.github.io/2020/12/18/Quantumult%20Quickstart%20Guide/</id>
    <published>2020-12-18T12:35:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<p>Quantumult X 快速入门教程，主要是奔着去除微信广告的功能去的。</p><a id="more"></a><ol><li><p>通过美区 App Store 购买下载 Quantumult X<br>如果这步遇到困难请在 Telegram 联系 <a href="https://t.me/Rocket_Girls" target="_blank" rel="noopener">@Rocket_Girls</a> 代购</p></li><li><p>添加订阅地址<br>把自己购买的线路节点订阅地址复制到剪切板之后<br>打开 Quantumult X → 右下角按钮 → 节点分类 → 引用（订阅） → 右上角 + 号 → 粘贴 URL</p></li><li><p>修改规则模式<br>打开 Quantumult X → 右下角按钮 → 滑到底部 → 其他设置 → 选择「规则分流」</p></li><li><p>安装 VPN 配置<br>打开 Quantumult X → 点击右上角按钮 → 连接 → 安装 VPN 配置</p></li><li><p>添加重写规则<br>打开 Quantumult X → 右下角按钮 → 滑到底部 → 配置文件分类 → 编辑 → 找到 [rewrite_local] 所在行 → 粘贴以下内容 → 点击右上角保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">; 去除微信公众号文章内广告</span><br><span class="line">^https?:\&#x2F;\&#x2F;mp\.weixin\.qq\.com\&#x2F;mp\&#x2F;getappmsgad url script-response-body WeChat.js</span><br><span class="line"></span><br><span class="line">; 访问电脑版知乎</span><br><span class="line">^https?:\&#x2F;\&#x2F;www\.zhihu\.com\&#x2F; url request-header (\r\n)User-Agent:.+(\r\n) request-header $1User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;71.0.3578.98 Safari&#x2F;537.36$2</span><br><span class="line"></span><br><span class="line">; DuckDuckGo 关键词重定向搜索</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;db\+([^&amp;]+).+ url 302 https:&#x2F;&#x2F;m.douban.com&#x2F;search&#x2F;?query&#x3D;$1</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;ddg\+([^&amp;]+).+ url 302 https:&#x2F;&#x2F;duckduckgo.com&#x2F;?ia&#x3D;about&amp;q&#x3D;$1</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;bd\+([^&amp;]+).+ url 302 https:&#x2F;&#x2F;www.baidu.com&#x2F;s?wd&#x3D;$1</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;gh\+([^&amp;]+).+ url 302 https:&#x2F;&#x2F;github.com&#x2F;search?q&#x3D;$1</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;gm\+([^&amp;]+).+ url 302 https:&#x2F;&#x2F;www.google.com&#x2F;search?&amp;tbm&#x3D;isch&amp;q&#x3D;$1</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;yd\+([^&amp;]+).+ url 302 https:&#x2F;&#x2F;dict.youdao.com&#x2F;search?q&#x3D;$1</span><br><span class="line">^https:\&#x2F;\&#x2F;duckduckgo.com\&#x2F;\?q&#x3D;([^&amp;]+).+ url 302 https:&#x2F;&#x2F;www.google.com&#x2F;search?q&#x3D;$1</span><br></pre></td></tr></table></figure></li><li><p>添加 MitM 主机名<br>打开 Quantumult X → 右下角按钮 → 滑到底部 → 配置文件分类 → 编辑 → 找到 [mitm] 所在行 → 粘贴以下内容 → 点击右上角保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname &#x3D; mp.weixin.qq.com, www.zhihu.com, duckduckgo.com</span><br></pre></td></tr></table></figure></li><li><p>修改 Safari 搜索引擎<br>打开设置 → Safari 浏览器 → 搜索引擎 → DuckDuckGo</p></li><li><p>生成 MitM 根证书<br>打开 Quantumult X → 右下角按钮 → 滑到 MitM 分类 → 点击生成证书</p></li><li><p>安装 MitM 根证书<br>打开 Quantumult X → 右下角按钮 → 滑到 MitM 分类 → 点击配置证书<br>打开设置 → 安装证书<br>打开设置 → 通用 → 关于本机 → 滑到底部证书信任设置 → 开启信任 Quantumult X 证书  </p></li><li><p>开启重写功能<br>打开 Quantumult X → 右下角按钮 → 滑到重写分类 → 点击开启重写<br>打开 Quantumult X → 右下角按钮 → 滑到 MitM 分类 → 点击开启 MitM</p></li><li><p>添加 WeChat.js 重写脚本<br>打开文件 → 我的 iPhone → Quantumult X → Scripts → 新建文件：WecChat.js → 粘贴以下内容  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 去除微信公众号文章内广告</span><br><span class="line">var obj &#x3D; JSON.parse($response.body);</span><br><span class="line">obj.advertisement_num &#x3D; 0;</span><br><span class="line">obj.advertisement_info &#x3D; [];</span><br><span class="line">delete obj.appid;</span><br><span class="line">$done(&#123; body: JSON.stringify(obj) &#125;);</span><br></pre></td></tr></table></figure><p>如果不会如何在文件应用中新建文件的话，可以先把这段代码在电脑上编辑保存，发送给 iPhone 然后再选择在文件应用中打开，最后移动到 Scripts 文件夹下。  </p></li><li><p>重启 Quantumult X 查看效果  </p></li></ol><ul><li>微信公众号尾部的广告屏蔽</li><li>知乎不会强制要求跳转客户端</li><li>在 Safari 搜索栏可以使用关键词：db ddg bd gh gm yd 直接跳转搜索网页，如果不带关键词默认重定向至 Google 搜索  </li></ul><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://github.com/alpha87/QuantumultX-Profiles" target="_blank" rel="noopener">alpha87/QuantumultX</a><br><a href="https://www.notion.so/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917" target="_blank" rel="noopener">Quantumult X 不完全教程</a><br><a href="https://www.lijianxun.top/106.html" target="_blank" rel="noopener">QuantumultX 配置文件以及常用的脚本推荐</a><br><a href="https://limbopro.xyz/archives/2561.html" target="_blank" rel="noopener">Rules / 分流/去广告规则：Surge / Shadowrocket / Quantumult/ Quantumult X 及详细配置步骤教程（萌新小白版本）</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Quantumult X 快速入门教程，主要是奔着去除微信广告的功能去的。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://jameshopbourn.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>利他是最大的利己</title>
    <link href="https://jameshopbourn.github.io/2020/11/15/Cooperative-Competition/"/>
    <id>https://jameshopbourn.github.io/2020/11/15/Cooperative-Competition/</id>
    <published>2020-11-15T02:08:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<p>复习了《高效能人士的七个习惯》里面说到有一个好习惯是：「双赢思维，利人利己」。但是在现实世界中我们可能会为了争取第一而减少合作，虽然说双赢和合作并不是 100% 完全对立，但是它们多少是有交集的。在竞争领域，大部分人或多或少都是有私心的，或多或少都会有所保留。</p><a id="more"></a><p>争取第一是有利有弊的：利在于我们会在竞争下对自己的要求更高，鞭策自己更加努力。弊在于我们会卷入这种无尽的竞争中痛苦地循环，也就是所谓的内卷。学生时代我们比成绩第一，工作之后我们比地位、薪资第一，有了孩子之后我们比孩子成绩第一，孩子工作之后比他们的地位、薪资第一。这样无穷无尽地循环下去。中国教育下每个人都争先恐后争第一，这种感觉真的让人挺不舒服的。但是能做第一谁有想做第二呢？</p><p>前两天看北航的一个 CS 学生在图书馆猝死（后来反转救过来了），我看知乎有个评论说：「他在猝死之前的一段时间肯定也曾感到过心绞痛的感觉，但是他觉得睡一觉忍一忍也就过去了，没什么大不了的。」但是我个人的真实经历告诉我那就是身体极度缺乏休息的表现，如果持续下去最后的结果大概率就是出大问题或者更严重的猝死。但是他没得选择，他可能是为了争第一他不得不这样做。好在经历过了这次事情之后，他或许会用另一个态度来看待卷吧。</p><p>我跟两个朋友聊了一下这个话题，结合自己的经历，我的一点想法是：当时看这个问题的时候眼光太狭隘了，<strong>生活中不只是有输赢，生活中比输赢有意思一百倍的事情多了去了</strong>。没必要局限于这一个点，把生活点点点滴滴都照顾到了远比死盯一个点的生活精彩。我们的生活有工作、学习、家庭。如果我们只盯着工作学习去看，却忽略了我们身边最爱的人，这样的生活我觉得也并不会非常快乐。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复习了《高效能人士的七个习惯》里面说到有一个好习惯是：「双赢思维，利人利己」。但是在现实世界中我们可能会为了争取第一而减少合作，虽然说双赢和合作并不是 100% 完全对立，但是它们多少是有交集的。在竞争领域，大部分人或多或少都是有私心的，或多或少都会有所保留。&lt;/p&gt;
    
    </summary>
    
    
      <category term="心理" scheme="https://jameshopbourn.github.io/categories/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="生活" scheme="https://jameshopbourn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>家庭父母关系</title>
    <link href="https://jameshopbourn.github.io/2020/04/16/Family%20Relationship/"/>
    <id>https://jameshopbourn.github.io/2020/04/16/Family%20Relationship/</id>
    <published>2020-04-16T13:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<p>有个好朋友跟我谈心，抱怨说她妈妈有时候会因为一件小事口出脏话，骂地非常难听的那种。让她觉得很烦恼很不舒服。</p><p>分享一个我自己的想法</p><a id="more"></a><p><mark>我觉得这不完全是她们的错，这应该是她们那代人的局限性。在不少家庭中其实都存在这种情况，而且更多地是母亲会有这种局限性，父亲比较少。</mark></p><p>女性是比较偏感性一点的，比如她要求你完成一件事情，她不考虑这件事在逻辑上是否可行，而是只要求给出一个结果。如果她们主观上认为这件事是可行的，她们就会在心里等同认定这件事在客观上也是可行的。但是这件事又是超出你能力范围的，她又不理解，就会认为你在跟她闹情绪，耍性子。我们那一代的父母家庭原因普遍来说文化水平不高，人的认知水平越低越是固执，她很少能听进你说的话。对于这种情况冷处理就好，因为你很难从逻辑上去说服她，因为她不跟你谈逻辑。</p><p>但是同时妈妈也是最爱你的人之一，只要你不是做了什么违法犯罪的事情，她们都会尽力地护你，做你坚实的后盾，提供你所需要的生活保障以及其他等等。</p><p>对于妈妈这个角色应该两面看待，不好的一面确实有，但是不是她们想这样故意刁难你。这可能要追溯到人类的进化史，女性天生就是比较感性一点的。基因所决定的事情我们没有办法去改变。但是可以通过学习，认识到逻辑性的重要性。但是爱你的时候也会是全心全意地爱你，从孩子到离开的那一刻，她们这一辈子都在为你付出、深爱着你。</p><p>所以这也是为什么我经常跟朋友说找女朋友应该找一个有文化的女生，因为接受过良好教育的女生才会比较心平气和地跟你讲道理，认识到什么事是可以做的，什么事是做不到的，减少生活中不必要的矛盾。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有个好朋友跟我谈心，抱怨说她妈妈有时候会因为一件小事口出脏话，骂地非常难听的那种。让她觉得很烦恼很不舒服。&lt;/p&gt;
&lt;p&gt;分享一个我自己的想法&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="生活" scheme="https://jameshopbourn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>逻辑门电路</title>
    <link href="https://jameshopbourn.github.io/2020/03/27/Logic%20Gate/"/>
    <id>https://jameshopbourn.github.io/2020/03/27/Logic%20Gate/</id>
    <published>2020-03-27T15:30:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<p>逻辑门</p><table><thead><tr><th align="center">与门</th><th align="center">或门</th><th align="center">非门</th><th align="center">与非门</th><th align="center">或非门</th><th align="center">异或门</th><th align="center">同或门</th></tr></thead><tbody><tr><td align="center">AND</td><td align="center">OR</td><td align="center">NOT</td><td align="center">NAND</td><td align="center">NOR</td><td align="center">XOR</td><td align="center">NXOR</td></tr></tbody></table><a id="more"></a><p>与门：全部高则高</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A AND B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr></tbody></table><p>或门：任意高则高</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A OR B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr></tbody></table><p>非门：输出与输入电平相反的相位</p><table><thead><tr><th align="center">A</th><th align="center">NOT A</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">1</td></tr></tbody></table><p>与非门：全高为低，任意低则高</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A NAND B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td></tr></tbody></table><p>或非门：全低为高，任意高则低</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A NOR B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td></tr></tbody></table><p>异或门：相异为高，相同为低</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A XOR B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr></tbody></table><p>同或门：相异为低，相同为高</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A NXOR B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;逻辑门&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;与门&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;或门&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;非门&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;与非门&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;或非门&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;异或门&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;同或门&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;AND&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;OR&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;NOT&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;NAND&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;NOR&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;XOR&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;NXOR&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
    
      <category term="物理" scheme="https://jameshopbourn.github.io/tags/%E7%89%A9%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>简约生活指南(更新中...)</title>
    <link href="https://jameshopbourn.github.io/2020/03/07/SimpleLife/"/>
    <id>https://jameshopbourn.github.io/2020/03/07/SimpleLife/</id>
    <published>2020-03-07T11:59:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<ul><li>衣物整理：手卷压缩袋</li><li>桌理整理：得力文假架</li><li>整理材料：得力文件盘</li><li>整理零件：抽屉收纳盒</li><li>整理元件：方格收纳盒</li></ul><a id="more"></a><ul><li>整理走线：透明电线夹</li><li>整理线材：衣柜挂衣杆</li><li>试剂分装：旋盖西林瓶</li><li>瓶子整理：有机玻璃架</li><li>线材卡包：Kablecard</li><li>整理存储卡：存储卡收纳盒</li></ul><p><img src="/media/sort.jpg"></p><h2 id="数据整理"><a href="#数据整理" class="headerlink" title="数据整理"></a>数据整理</h2><ul><li>代码：写完立即推送 GitHub</li><li>配置：stow 配合 GitHub 同步</li><li>文章：MWeb 配合 iCloud 同步</li><li>笔记：Bear 配合 iCloud 同步</li><li>密码：1Password 配合 iCloud 同步</li><li>文件：PDF Expert 配合 Dropbox 同步</li><li>照片：每周整理一次，有意义的转存 SSD，其他删除</li></ul><h2 id="存储方案"><a href="#存储方案" class="headerlink" title="存储方案"></a>存储方案</h2><h4 id="低级重要程度（系统盘）："><a href="#低级重要程度（系统盘）：" class="headerlink" title="低级重要程度（系统盘）："></a>低级重要程度（系统盘）：</h4><ul><li>TF卡 32GB：树莓派</li><li>TF卡 32GB：树莓派</li><li>固态系统盘 120GB：macOS + 软件 + SSH key + GPG key</li><li>固态系统盘 120GB：Windows To Go</li></ul><h4 id="中级重要程度（素材盘）："><a href="#中级重要程度（素材盘）：" class="headerlink" title="中级重要程度（素材盘）："></a>中级重要程度（素材盘）：</h4><ul><li>TF 卡 64GB：相机</li><li>SD 卡 64GB：GoPro</li><li>TF 卡 64GB：备用</li><li>SD 卡 64GB：备用</li><li>机械视频盘 4TB：vlog 视频存储备份</li></ul><h4 id="高级重要程度（存储盘）："><a href="#高级重要程度（存储盘）：" class="headerlink" title="高级重要程度（存储盘）："></a>高级重要程度（存储盘）：</h4><ul><li>固态相册盘 2TB：有意义的照片视频</li><li>机械备份盘 2TB：对相册盘进行备份</li></ul><h4 id="最高重要程度（加密盘）："><a href="#最高重要程度（加密盘）：" class="headerlink" title="最高重要程度（加密盘）："></a>最高重要程度（加密盘）：</h4><ul><li>固态虚拟盘 120GB：全盘加密存储虚拟机</li></ul><h4 id="硬件安全密钥："><a href="#硬件安全密钥：" class="headerlink" title="硬件安全密钥："></a>硬件安全密钥：</h4><ul><li>Yubikey 5</li></ul><h4 id="骑行装备"><a href="#骑行装备" class="headerlink" title="骑行装备"></a>骑行装备</h4><ul><li>后勤包：日常用品、电子产品放在后勤车上</li><li>锁鞋包：运动鞋和锁鞋交替使用，内置一个自封袋可以保证锁鞋包不会脏到，一并放在后勤车上</li><li>骑行包：骑行的时候背在身上，路上用得到的物品<ul><li>雷音高压迷你打气筒</li><li>建大备用内胎</li><li>ParkTools 撬胎棒</li><li>擦车布（考虑到雨天换胎）</li><li>骑行风衣（考虑到大风天）</li><li>能量棒（考虑到长途骑行）</li><li>六角螺丝刀（备用）</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;衣物整理：手卷压缩袋&lt;/li&gt;
&lt;li&gt;桌理整理：得力文假架&lt;/li&gt;
&lt;li&gt;整理材料：得力文件盘&lt;/li&gt;
&lt;li&gt;整理零件：抽屉收纳盒&lt;/li&gt;
&lt;li&gt;整理元件：方格收纳盒&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="生活" scheme="https://jameshopbourn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="清单" scheme="https://jameshopbourn.github.io/tags/%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>VIM</title>
    <link href="https://jameshopbourn.github.io/2020/03/07/vim/"/>
    <id>https://jameshopbourn.github.io/2020/03/07/vim/</id>
    <published>2020-03-07T02:23:00.000Z</published>
    <updated>2022-05-25T00:36:44.231Z</updated>
    
    <content type="html"><![CDATA[<p>VIM 基本配置</p><a id="more"></a><ul><li><p>主题配置</p></li><li><p>编码设定</p></li><li><p>同步复制</p></li><li><p>插件管理</p></li><li><p>状态插件</p></li><li><p>版权信息</p></li><li><p>文本对齐<br><a href="https://gist.github.com/tpope/287147" target="_blank" rel="noopener">https://gist.github.com/tpope/287147</a></p></li><li><p>输入法自动切换<br><a href="https://zhuanlan.zhihu.com/p/49411224" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/49411224</a></p></li></ul><p>按键 操作描述<br>^F 屏幕向下滚动一屏；<br>^B 屏幕向上滚动一屏；<br>^E 屏幕向下滚动一行；<br>^Y 屏幕向上滚动一行；<br>^D 屏幕向下滚动半屏；<br>^U 屏幕向上滚动半屏；<br>z + Enter 滚动屏幕，使当前光标所在行处于屏幕第一行；<br>z + . 滚动屏幕，使当前光标所在行处于屏幕中间行；<br>z + - 滚动屏幕，使当前光标所在行处于屏幕最后一行；<br><a href="https://blog.csdn.net/liuhhaiffeng/article/details/52425966" target="_blank" rel="noopener">https://blog.csdn.net/liuhhaiffeng/article/details/52425966</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VIM 基本配置&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="vim" scheme="https://jameshopbourn.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib with Travis-CI</title>
    <link href="https://jameshopbourn.github.io/2020/02/16/travis%20with%20matplotlib/"/>
    <id>https://jameshopbourn.github.io/2020/02/16/travis%20with%20matplotlib/</id>
    <published>2020-02-15T17:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.231Z</updated>
    
    <content type="html"><![CDATA[<p>思路: develop 分支存储 matplotlib 代码,git push 之后交由 Travis-CI 云端编译,编译成功后推送到 master 分支供 develop 分支 markdown 引用。</p><p>原因: 之所以要在 GitHub 上使用 matplotlib + Travis-CI 是因为我把投资报表存储在 GitHub 上，想加点可视化的折线图,于是便有了这般折腾。</p><a id="more"></a><p>备注：如果偏好使用 master 分支作为默认分支，请在第 5 步中将 .travis.yml 文件最后一行末尾的 HEAD:master 改为 HEAD:develop 然后将 master 与 develop 文件内容对调即可。</p><hr><p>TL,DR:</p><ol><li>GitHub 新建仓库</li><li>clone 仓库,新建 develop 分支后创建 Demo.py 文件推送回远程仓库</li><li>新建 master 分支,推送到远程仓库</li><li>申请 GitHub token 用于配置 Travis-CI</li><li>在 develop 分支下编辑 .travis.yml 推送远程仓库</li><li>在 develop 分支下编辑 README.md 推送远程仓库</li></ol><hr><p>clone 仓库,新建 develop 分支后创建 Demo.py 文件推送回远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">克隆远程仓库</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;JamesHopbourn&#x2F;matplotlib-with-travis</span><br><span class="line"></span><br><span class="line">进入仓库目录</span><br><span class="line">cd  matplotlib-with-travis</span><br><span class="line"></span><br><span class="line">新建 develop 分支</span><br><span class="line">git checkout -b develop</span><br><span class="line"></span><br><span class="line">新建 Demo.py 脚本</span><br><span class="line">vim Demo.py</span><br><span class="line"></span><br><span class="line">添加修改内容</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">添加修改注释</span><br><span class="line">git commit -m &#39;add Demo.py&#39;</span><br><span class="line"></span><br><span class="line">推送远程仓库</span><br><span class="line">git push -u origin develop</span><br></pre></td></tr></table></figure><hr><p>新建 master 分支并推送回远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">新建 master 分支</span><br><span class="line">git checkout -b master</span><br><span class="line"></span><br><span class="line">推送远程仓库</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><hr><p>打开 Travis-CI 项目设置界面设置 token 值为 GitHub 申请的 token,指定 develop 分支使用<br><img src="/media/200216token.png"></p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">切换回 develop 分支</span><br><span class="line">git checkout develop</span><br><span class="line"></span><br><span class="line">新建 .travis.yml 配置文件</span><br><span class="line">vim .travis.yml</span><br><span class="line"></span><br><span class="line">.travis.yml 内容</span><br><span class="line">before_install:</span><br><span class="line"># 安装 matplotlib</span><br><span class="line">- python -m pip install matplotlib --user</span><br><span class="line"></span><br><span class="line"># git 设置</span><br><span class="line">- git config --global user.name &quot;James Hopbourn&quot;</span><br><span class="line">- git config --global user.email &quot;jameshopbourn@gmail.com&quot;</span><br><span class="line"></span><br><span class="line"># 新建 public 目录,python 程序执行后生成的图片保存到 public 目录</span><br><span class="line">script:</span><br><span class="line">- mkdir -p public</span><br><span class="line">- python Demo.py</span><br><span class="line"></span><br><span class="line"># 成功之后进入 public 目录将 public 目录内的内容上传到 master 分支</span><br><span class="line">after_success:</span><br><span class="line">- cd  public</span><br><span class="line">- git init</span><br><span class="line">- git add .</span><br><span class="line">- git commit -m &quot;Travis CI Auto Builder&quot;</span><br><span class="line">- git push --force https:&#x2F;&#x2F;$&#123;token&#125;@github.com&#x2F;JamesHopbourn&#x2F;matplotlib-with-travis.git HEAD:master</span><br></pre></td></tr></table></figure><hr><p>推送回远程仓库,等待云端编译完成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">添加修改内容</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">添加修改注释</span><br><span class="line">git commit -m &#39;add .travis.yml&#39;</span><br><span class="line"></span><br><span class="line">推送远程仓库</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><hr><p>云端编译完成后在 master 分支下找到图片的 download 连接,切换到 develop 分支,引用图片使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">切换到 develop 分支</span><br><span class="line">git checkout develop</span><br><span class="line"></span><br><span class="line">编辑 README.md</span><br><span class="line">vim README.md</span><br><span class="line"></span><br><span class="line">README.md 内容</span><br><span class="line">![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;JamesHopbourn&#x2F;matplotlib-with-travis&#x2F;master&#x2F;Demo.png)</span><br><span class="line"></span><br><span class="line">添加修改内容</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">添加修改注释</span><br><span class="line">git commit -m &#39;add README.md&#39;</span><br><span class="line"></span><br><span class="line">使用 [skip ci] 参数可以跳过再次编译</span><br><span class="line">git commit -m &#39;add README.md [skip ci]&#39;</span><br><span class="line"></span><br><span class="line">推送远程仓库</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><hr><p><a href="https://github.com/JamesHopbourn/matplotlib-with-travis" target="_blank" rel="noopener">matplotlib-with-travis</a></p><p><img src="/media/200216diagram.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路: develop 分支存储 matplotlib 代码,git push 之后交由 Travis-CI 云端编译,编译成功后推送到 master 分支供 develop 分支 markdown 引用。&lt;/p&gt;
&lt;p&gt;原因: 之所以要在 GitHub 上使用 matplotlib + Travis-CI 是因为我把投资报表存储在 GitHub 上，想加点可视化的折线图,于是便有了这般折腾。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="自动化" scheme="https://jameshopbourn.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="matplotlib" scheme="https://jameshopbourn.github.io/tags/matplotlib/"/>
    
      <category term="travis" scheme="https://jameshopbourn.github.io/tags/travis/"/>
    
      <category term="Travis-ci" scheme="https://jameshopbourn.github.io/tags/Travis-ci/"/>
    
  </entry>
  
  <entry>
    <title>pandoc 中文支持</title>
    <link href="https://jameshopbourn.github.io/2020/02/14/pandoc%20Chinese%20support/"/>
    <id>https://jameshopbourn.github.io/2020/02/14/pandoc%20Chinese%20support/</id>
    <published>2020-02-14T14:30:00.000Z</published>
    <updated>2022-05-25T00:36:44.231Z</updated>
    
    <content type="html"><![CDATA[<p>使用 -V mainfont 参数提供中文支持 </p><p>pandoc Hepburn.md –pdf-engine=xelatex -V mainfont=’Songti SC’ -o Hepburn.pdf</p><a id="more"></a><p>安装 fontconfig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install fontconfig</span><br></pre></td></tr></table></figure><p>查看系统已安装的中文支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜ fc-list :lang&#x3D;zh-cn</span><br><span class="line">......</span><br><span class="line">&#x2F;System&#x2F;Library&#x2F;Fonts&#x2F;Supplemental&#x2F;Songti.ttc: Songti SC,宋體\-簡,宋体\-简:style&#x3D;Light,細體,细体</span><br><span class="line">&#x2F;System&#x2F;Library&#x2F;Fonts&#x2F;Supplemental&#x2F;Songti.ttc: Songti TC,宋體\-繁,宋体\-繁:style&#x3D;Regular,標準體,常规体</span><br><span class="line">&#x2F;System&#x2F;Library&#x2F;Fonts&#x2F;Supplemental&#x2F;Songti.ttc: Songti SC,宋體\-簡,宋体\-简:style&#x3D;Regular,標準體,常规体</span><br><span class="line">&#x2F;System&#x2F;Library&#x2F;Fonts&#x2F;PingFang.ttc: .PingFang SC,.蘋方\-簡,.苹方\-简:style&#x3D;Medium,中黑體,中黑体</span><br><span class="line">&#x2F;System&#x2F;Library&#x2F;Fonts&#x2F;Supplemental&#x2F;Songti.ttc: Songti TC,宋體\-繁,宋体\-繁:style&#x3D;Light,細體,细体</span><br><span class="line">&#x2F;System&#x2F;Library&#x2F;Fonts&#x2F;PingFang.ttc: .PingFang SC,.蘋方\-簡,.苹方\-简:style&#x3D;Semibold,中粗體,中粗体</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>编辑 Markdown 文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜ vim Hepburn.md </span><br><span class="line">---</span><br><span class="line">title: 奥黛丽·赫本</span><br><span class="line">author: 唐纳德·斯伯特</span><br><span class="line">date: January 5, 2020</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 第一章：爸爸去哪儿了</span><br><span class="line"># 第二章：战火中起舞</span><br><span class="line"># 第三章：星光乍现</span><br><span class="line"># 第四章：百老汇的金粉世界</span><br><span class="line"># 第五章：公主或新娘</span><br><span class="line"># 第六章：迷人的精灵</span><br><span class="line"># 第七章：崩溃的边缘</span><br><span class="line"># 第八章：甜姐儿童话</span><br></pre></td></tr></table></figure><p>生成 PDF</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc Hepburn.md --pdf-engine&#x3D;xelatex -V mainfont&#x3D;&#39;Songti SC&#39; -o Hepburn.pdf</span><br></pre></td></tr></table></figure><p><img src="/media/200214Hepburn.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 -V mainfont 参数提供中文支持 &lt;/p&gt;
&lt;p&gt;pandoc Hepburn.md –pdf-engine=xelatex -V mainfont=’Songti SC’ -o Hepburn.pdf&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="pandoc" scheme="https://jameshopbourn.github.io/tags/pandoc/"/>
    
  </entry>
  
  <entry>
    <title>如何妥善保存密码密钥</title>
    <link href="https://jameshopbourn.github.io/2020/02/09/Password%20Security/"/>
    <id>https://jameshopbourn.github.io/2020/02/09/Password%20Security/</id>
    <published>2020-02-09T14:35:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<ol><li>账号密码全部保存 <a href="https://1password.com/zh-cn/" target="_blank" rel="noopener">1Password</a>，脑子放空只记住主密码，主密码要有一定安全性</li><li>能开启两步验证的账号都开启<br>例如：Google、Dropbox、GitHub、Microsoft、Facebook</li><li>密码长度能多长就多长 反正都是自动填充</li></ol><a id="more"></a><ol start="4"><li><p>密码全部用 <a href="https://1password.com/zh-cn/" target="_blank" rel="noopener">1Password</a> 随机生成 不能重复<br>例如：密码设置到最长长度，字母 1/2、数字 1/4、符号 1/4</p></li><li><p>不要过于信任 Touch ID，因为它可以被欺骗也可以「被」认证，Face ID 同理</p></li><li><p>归档敏感文件使用 7z 固实压缩并加密文件名，密码不少于 36 位，用 1Password 生成<br>macOS 解压缩软件推荐使用 <a href="https://www.keka.io/" target="_blank" rel="noopener">Keka</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install keka</span><br></pre></td></tr></table></figure><div style="text-align:center"><img src="/media/2002097z.png" ></div></li><li><p>抹除敏感文件需要用 <a href="https://www.freebsd.org/cgi/man.cgi?query=gshred&apropos=0&sektion=0&manpath=FreeBSD+10.2-RELEASE+and+Ports&arch=default&format=html" target="_blank" rel="noopener">gshred</a> 擦写 36 次或以上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install coreutils</span><br><span class="line">gshred -f -v -z -u --iterations&#x3D;36 文件名</span><br></pre></td></tr></table></figure></li><li><p>SSH、GPG 私钥备份到 1Password, passphrase 不少于 36 位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;个人邮箱&quot;</span><br></pre></td></tr></table></figure></li><li><p>SSH 私钥配置 <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/ssh-agent" target="_blank" rel="noopener">ssh-agent</a> 每次重启后要求重新输入密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.zshrc</span><br><span class="line"></span><br><span class="line">plugins&#x3D;(... ssh-agent ...)</span><br></pre></td></tr></table></figure></li><li><p>GPG 私钥配置 <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/gpg-agent" target="_blank" rel="noopener">gpg-agent</a> 每次重启后要求重新输入密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.zshrc</span><br><span class="line"></span><br><span class="line">plugins&#x3D;(... gpg-agent ...)</span><br></pre></td></tr></table></figure></li><li><p>二次验证备用码保存到 VeraCrypt 卷中，VeraCrypt 密码随机生存离线保存，保证 VeraCrypt 密码与网络隔离且多份安全保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install p7zip qrencode</span><br><span class="line">vim password.txt</span><br><span class="line">7z a -t7z password.7z password.txt</span><br><span class="line">xxd password.7z &gt; password.txt</span><br><span class="line">qrencode -r password.txt -o password.png</span><br></pre></td></tr></table></figure></li><li><p>常用敏感文件使用 <a href="(https://www.veracrypt.fr/en/Downloads.html)">VeraCrypt</a> 加密，iCloud 同步。<br>iOS 客户端: <a href="https://apps.apple.com/us/app/disk-decipher/id516538625" target="_blank" rel="noopener">Disk Decipher</a><br>macOS 客户端: <a href="https://www.veracrypt.fr/en/Downloads.html" target="_blank" rel="noopener">VeraCrypt</a>。建议配合<a href="https://www.veracrypt.fr/en/Hidden%20Volume.html" target="_blank" rel="noopener">隐藏卷</a>和 <a href="https://www.veracrypt.fr/en/Keyfiles%20in%20VeraCrypt.html" target="_blank" rel="noopener">keyfile</a> 使用。<br><a href="https://www.veracrypt.fr/en/Keyfiles%20in%20VeraCrypt.html" target="_blank" rel="noopener">keyfile</a> 保存在 TF卡，遇到审查直接剪断 TF卡</p></li><li><p>特别重要或者敏感的账号配置 <a href="https://zh.wikipedia.org/zh-cn/YubiKey" target="_blank" rel="noopener">Yubikey</a> 硬件物理认证</p></li><li><p>能用 SSH 尽量用 SSH，比如使用 SSH 连接 GitHub 而不是 HTTPS<br>使用 SSH 协议而不是 HTTPS 协议的好处: <a href="https://program-think.blogspot.com/2016/03/GitHub-Security-Tips.html" target="_blank" rel="noopener">使用 GitHub 的几种方式——兼谈安全性和隐匿性的经验</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;账号密码全部保存 &lt;a href=&quot;https://1password.com/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1Password&lt;/a&gt;，脑子放空只记住主密码，主密码要有一定安全性&lt;/li&gt;
&lt;li&gt;能开启两步验证的账号都开启&lt;br&gt;例如：Google、Dropbox、GitHub、Microsoft、Facebook&lt;/li&gt;
&lt;li&gt;密码长度能多长就多长 反正都是自动填充&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="审查" scheme="https://jameshopbourn.github.io/tags/%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="安全" scheme="https://jameshopbourn.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="隐私" scheme="https://jameshopbourn.github.io/tags/%E9%9A%90%E7%A7%81/"/>
    
      <category term="密钥" scheme="https://jameshopbourn.github.io/tags/%E5%AF%86%E9%92%A5/"/>
    
      <category term="密码" scheme="https://jameshopbourn.github.io/tags/%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>macOS restore</title>
    <link href="https://jameshopbourn.github.io/2020/02/08/macOS%20Restore/"/>
    <id>https://jameshopbourn.github.io/2020/02/08/macOS%20Restore/</id>
    <published>2020-02-08T14:53:00.000Z</published>
    <updated>2022-05-25T00:36:44.231Z</updated>
    
    <content type="html"><![CDATA[<p>系统 U 盘里存储：</p><ul><li>Surge 配置文件</li><li>Surge 1Password 等常用软件</li><li>homebrew core cask font</li><li>Command Line Tools.dmg</li><li>SSH、GPG 私钥、账号密码加密压缩包</li></ul><a id="more"></a><h2 id="高级安全选项"><a href="#高级安全选项" class="headerlink" title="高级安全选项"></a>高级安全选项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">恢复模式下开启固件密码</span><br><span class="line">FileVault 磁盘加密</span><br></pre></td></tr></table></figure><h2 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp -r &#x2F;Volumes&#x2F;Catalina&#x2F;软件&#x2F;* &#x2F;Applications;\</span><br><span class="line">cp -r &#x2F;Volumes&#x2F;Catalina&#x2F;Surge ~&#x2F;Documents;\</span><br><span class="line">sudo installer -pkg &#x2F;Volumes&#x2F;Catalina&#x2F;Restore&#x2F;1Password-6.8.9.pkg -target &#x2F;;\</span><br><span class="line">say &#39;1Password Installed&#39;</span><br></pre></td></tr></table></figure><h2 id="Music"><a href="#Music" class="headerlink" title="Music"></a>Music</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r &#x2F;Volumes&#x2F;Catalina&#x2F;Music ~&#x2F;Music</span><br></pre></td></tr></table></figure><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip &#x2F;Volumes&#x2F;Catalina&#x2F;Restore&#x2F;SSH.zip</span><br></pre></td></tr></table></figure><h2 id="Surge-proxy"><a href="#Surge-proxy" class="headerlink" title="Surge proxy"></a>Surge proxy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export https_proxy&#x3D;http:&#x2F;&#x2F;127.0.0.1:6152;export http_proxy&#x3D;http:&#x2F;&#x2F;127.0.0.1:6152;export all_proxy&#x3D;socks5:&#x2F;&#x2F;127.0.0.1:6153</span><br></pre></td></tr></table></figure><h2 id="Hosts"><a href="#Hosts" class="headerlink" title="Hosts"></a>Hosts</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;hosts</span><br><span class="line"></span><br><span class="line">0.0.0.0  ocsp.apple.com</span><br><span class="line"></span><br><span class="line">[ESC]</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure><h2 id="Command-Line-Tools"><a href="#Command-Line-Tools" class="headerlink" title="Command Line Tools"></a>Command Line Tools</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hdiutil attach &#x2F;Volumes&#x2F;Catalina&#x2F;Restore&#x2F;Command_Line_Tools_for_Xcode_11.3.1.dmg;\</span><br><span class="line">sudo installer -pkg &#x2F;Volumes&#x2F;Command\ Line\ Developer\ Tools&#x2F;Command\ Line\ Tools.pkg  -target &#x2F;;\</span><br><span class="line">hdiutil unmount &#x2F;Volumes&#x2F;Command\ Line\ Developer\ Tools;\</span><br><span class="line">say &#39;Command line tools installed&#39;</span><br></pre></td></tr></table></figure><h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;;\</span><br><span class="line">cp -r &#x2F;Volumes&#x2F;Catalina&#x2F;homebrew &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps;\</span><br><span class="line">brew install lsd gnupg rmtrash coreutils stow pigz zip unzip unrar p7zip highlight hexyl hub git vim icdiff fzf duti;\</span><br><span class="line">brew install findutils gnu-tar gnu-sed gawk gnutls grep;\</span><br><span class="line">brew cask install font-source-code-pro font-hack-nerd-font;\</span><br><span class="line">brew cask install sublime-text gpg-suite veracrypt adguard</span><br></pre></td></tr></table></figure><h2 id="dotfile"><a href="#dotfile" class="headerlink" title="dotfile"></a>dotfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ssh -T james;\</span><br><span class="line">git clone ssh:&#x2F;&#x2F;james&#x2F;JamesHopbourn&#x2F;dotfile ~&#x2F;dotfile;\</span><br><span class="line">chflags hidden ~&#x2F;dotfile;\</span><br><span class="line">mkdir ~&#x2F;.config&#x2F; ~&#x2F;.lldb ~&#x2F;.subversion ~&#x2F;.tmux;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME home&#x2F;;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME&#x2F;.lldb&#x2F; .lldb&#x2F;;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME&#x2F;.tmux&#x2F; .tmux&#x2F;;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME&#x2F;.config&#x2F; .config&#x2F;;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME&#x2F;.subversion&#x2F; .subversion&#x2F;;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME&#x2F;Library&#x2F;Preferences Preferences;\</span><br><span class="line">stow --dir&#x3D;$HOME&#x2F;dotfile --ignore&#x3D;&#39;.DS_Store&#39; --target&#x3D;$HOME&#x2F;Library&#x2F;Application\ Support&#x2F;iTerm2&#x2F;DynamicProfiles Profile</span><br></pre></td></tr></table></figure><h2 id="ZSH"><a href="#ZSH" class="headerlink" title="ZSH"></a>ZSH</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.github.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;;\</span><br><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;zdharma&#x2F;zinit&#x2F;master&#x2F;doc&#x2F;install.sh)&quot;;\</span><br><span class="line">sed -i &#39;201s&#x2F;%~&#x2F;%c&#x2F;&#39;    ~&#x2F;.oh-my-zsh&#x2F;themes&#x2F;agnoster.zsh-theme;\</span><br><span class="line">sed -i &#39;47s&#x2F;google&#x2F;gg&#x2F;&#39; ~&#x2F;.oh-my-zsh&#x2F;plugins&#x2F;web-search&#x2F;web-search.plugin.zsh;\</span><br><span class="line">sed -i &#39;52s&#x2F;github&#x2F;gh&#x2F;&#39; ~&#x2F;.oh-my-zsh&#x2F;plugins&#x2F;web-search&#x2F;web-search.plugin.zsh;\</span><br><span class="line">sed -i &#39;&#x2F;gcsm&#x2F; s&#x2F;.*&#x2F;function gcsm &#123; git commit -a -m &quot;$*&quot;; &#125;&#x2F;&#39; ~&#x2F;.oh-my-zsh&#x2F;plugins&#x2F;git&#x2F;git.plugin.zsh</span><br><span class="line">curl -fLo ~&#x2F;Library&#x2F;Fonts&#x2F;Droid\ Sans\ Mono\ for\ Powerline\ Nerd\ Font\ Complete.otf https:&#x2F;&#x2F;github.com&#x2F;ryanoasis&#x2F;nerd-fonts&#x2F;raw&#x2F;master&#x2F;patched-fonts&#x2F;DroidSansMono&#x2F;complete&#x2F;Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf;\</span><br><span class="line">vim -c 90,94d -c startinsert ~&#x2F;.oh-my-zsh&#x2F;themes&#x2F;agnoster.zsh-theme +90</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">prompt_context() &#123;</span><br><span class="line">  emojis&#x3D;(&quot;⚡️&quot; &quot;🔥&quot; &quot;💀&quot; &quot;👑&quot; &quot;😎&quot; &quot;🐸&quot; &quot;🐵&quot; &quot;🦄&quot; &quot;🌈&quot; &quot;😄&quot; &quot;🚀&quot; &quot;💡&quot; &quot;🎉&quot; &quot;🔑&quot; &quot;🇹🇭&quot; &quot;🚦&quot; &quot;🌙&quot;)</span><br><span class="line">  RAND_EMOJI_N&#x3D;$(( $RANDOM % $&#123;#emojis[@]&#125; + 1))</span><br><span class="line">  prompt_segment magent black &quot;$&#123;emojis[$RAND_EMOJI_N]&#125; &quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[return]</span><br><span class="line">[ESC]</span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line">source ~&#x2F;.zshrc;\</span><br><span class="line">sed -i &#39;&#39; &#39;36s&#x2F;8&#x2F;180&#x2F;&#39; ~&#x2F;.zinit&#x2F;plugins&#x2F;zsh-users---zsh-autosuggestions&#x2F;zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure><p><img src="/media/200212iterm.png"></p><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install pip;\</span><br><span class="line">pip install powerline-status --user</span><br></pre></td></tr></table></figure><h2 id="vim-plug"><a href="#vim-plug" class="headerlink" title="vim-plug"></a>vim-plug</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~&#x2F;.vim&#x2F;autoload&#x2F;plug.vim --create-dirs https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;junegunn&#x2F;vim-plug&#x2F;master&#x2F;plug.vim;vim -c PlugInstall</span><br></pre></td></tr></table></figure><h2 id="GPG"><a href="#GPG" class="headerlink" title="GPG"></a>GPG</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hdiutil attach &#x2F;Volumes&#x2F;Catalina&#x2F;Restore&#x2F;Password.dmg;\</span><br><span class="line">sed -n &#39;23p&#39; &#x2F;Volumes&#x2F;Password&#x2F;password.txt|pbcopy;\</span><br><span class="line">gpg --import &#x2F;Volumes&#x2F;Catalina&#x2F;Restore&#x2F;secret-backup.gpg;\</span><br><span class="line">hdiutil unmount &#x2F;Volumes&#x2F;Password;\</span><br><span class="line">kill -9 $(fuser &#x2F;Volumes&#x2F;Catalina 2&gt;&#x2F;dev&#x2F;null);\</span><br><span class="line">hdiutil unmount &#x2F;Volumes&#x2F;Catalina</span><br></pre></td></tr></table></figure><h2 id="WeChat"><a href="#WeChat" class="headerlink" title="WeChat"></a>WeChat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Sunnyyoung&#x2F;WeChatTweak-macOS.git &#x2F;tmp&#x2F;WeChatTweak-macOS &amp;&amp; cd &#x2F;tmp&#x2F;WeChatTweak-macOS &amp;&amp; sudo make install &amp;&amp; cd -</span><br></pre></td></tr></table></figure><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@reboot say &#39;Welcome back James&#39;</span><br><span class="line">@reboot &#x2F;Applications&#x2F;v2ray-macos&#x2F;v2ray</span><br><span class="line">@reboot sudo python $HOME&#x2F;dotfile&#x2F;bin&#x2F;usbkill.py</span><br><span class="line">@reboot osascript $HOME&#x2F;dotfile&#x2F;bin&#x2F;reminder.scpt</span><br></pre></td></tr></table></figure><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">信任软件来源</span><br><span class="line">sudo spctl --master-disable</span><br><span class="line"></span><br><span class="line">禁用连接设备弹窗</span><br><span class="line">sudo killall -STOP -c usbd</span><br><span class="line"></span><br><span class="line">禁用开机音效</span><br><span class="line">sudo nvram SystemAudioVolume&#x3D;%00</span><br><span class="line"></span><br><span class="line">拼写自动纠正</span><br><span class="line">defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false</span><br><span class="line"></span><br><span class="line">禁用 DS_Store</span><br><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true</span><br><span class="line"></span><br><span class="line">设置进入休眠状态时马上启动屏幕保护程序</span><br><span class="line">defaults write com.apple.screensaver askForPassword -int 1</span><br><span class="line">defaults write com.apple.screensaver askForPasswordDelay -int 0</span><br><span class="line"></span><br><span class="line">Launchpad 图标数量</span><br><span class="line">defaults write com.apple.dock springboard-columns -int 8; defaults write com.apple.dock springboard-rows -int 8; defaults write com.apple.dock ResetLaunchPad -bool TRUE; killall Dock</span><br><span class="line"></span><br><span class="line">减少通知提醒时间</span><br><span class="line">defaults write com.apple.notificationcenterui bannerTime 3</span><br><span class="line"></span><br><span class="line">禁用程序崩溃报告</span><br><span class="line">defaults write com.apple.CrashReporter DialogType none</span><br><span class="line"></span><br><span class="line">禁用多播广告</span><br><span class="line">sudo defaults write &#x2F;Library&#x2F;Preferences&#x2F;com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool YES</span><br></pre></td></tr></table></figure><h2 id="duti-设置默认打开程序"><a href="#duti-设置默认打开程序" class="headerlink" title="duti 设置默认打开程序"></a>duti 设置默认打开程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">duti -s com.apple.Safari afp</span><br><span class="line">duti -s com.apple.Safari smb</span><br><span class="line">duti -s org.mozilla.firefox ftp</span><br></pre></td></tr></table></figure><h2 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;font_size&quot;: 20,</span><br><span class="line">&quot;font_face&quot;: &quot;SourceCodePro-Semibold&quot;,</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/xitu/macOS-Security-and-Privacy-Guide/blob/master/README-cn.md" target="_blank" rel="noopener">macOS-Security-and-Privacy-Guide/README-cn.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;系统 U 盘里存储：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Surge 配置文件&lt;/li&gt;
&lt;li&gt;Surge 1Password 等常用软件&lt;/li&gt;
&lt;li&gt;homebrew core cask font&lt;/li&gt;
&lt;li&gt;Command Line Tools.dmg&lt;/li&gt;
&lt;li&gt;SSH、GPG 私钥、账号密码加密压缩包&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="macOS" scheme="https://jameshopbourn.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>git 的一些技巧</title>
    <link href="https://jameshopbourn.github.io/2020/02/05/git%20tips/"/>
    <id>https://jameshopbourn.github.io/2020/02/05/git%20tips/</id>
    <published>2020-02-05T13:40:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置两个或多个-git-账号"><a href="#配置两个或多个-git-账号" class="headerlink" title="配置两个或多个 git 账号"></a>配置两个或多个 git 账号</h3><p>TL;DR: 生成两个不同的公私钥添加到两个 GitHub 账号，新建 SSH config 文件，Done.</p><a id="more"></a><p>生成公私钥并添加到 GitHub 账号的 SSH key 中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ssh-keygen -t rsa -b 4096 -C &quot;个人邮箱&quot;</span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa): &#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa_personal</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa_personal.</span><br><span class="line">Your public key has been saved in &#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa_personal_pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:O3KyKB6lj5GKCr3NMzCj+uqq2DLJQ1BiTrpUOT&#x2F;MMmc jameshopbourn@gmail.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 4096]----+</span><br><span class="line">|    .            |</span><br><span class="line">|.o.+             |</span><br><span class="line">|&#x3D;o. &#x3D;            |</span><br><span class="line">|oo o E           |</span><br><span class="line">|o.  * . S        |</span><br><span class="line">|.o++     .       |</span><br><span class="line">|+o*+  o +        |</span><br><span class="line">|O&#x3D;.Oo. &#x3D; .       |</span><br><span class="line">|&#x2F;BB.&#x3D;o.          |</span><br><span class="line">+----[SHA256]-----+</span><br><span class="line"></span><br><span class="line">➜  ~ ssh-keygen -t rsa -b 4096 -C &quot;公司邮箱&quot;</span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa): &#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa_company</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa_company.</span><br><span class="line">Your public key has been saved in &#x2F;Users&#x2F;james&#x2F;.ssh&#x2F;id_rsa_company_pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:O3KyKB6lj5GKCr3NMzCj+uqq2DLJQ1BiTrpUOT&#x2F;MMmc jameshopbourn@protonmail.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 4096]----+</span><br><span class="line">|    .            |</span><br><span class="line">|.o.+             |</span><br><span class="line">|&#x3D;o. &#x3D;            |</span><br><span class="line">|oo o E           |</span><br><span class="line">|o.  * . S        |</span><br><span class="line">|.o++     .       |</span><br><span class="line">|+o*+  o +        |</span><br><span class="line">|O&#x3D;.Oo. &#x3D; .       |</span><br><span class="line">|&#x2F;BB.&#x3D;o.          |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><p>上传公钥到 GitHub </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cat ~&#x2F;.ssh&#x2F;id_rsa_personal.pub|pbcopy</span><br><span class="line"></span><br><span class="line">➜  ~ cat ~&#x2F;.ssh&#x2F;id_rsa_company.pub|pbcopy</span><br></pre></td></tr></table></figure><p>连通性测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ssh -T personal</span><br><span class="line">Hi JamesHopbourn! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">➜  ~ ssh -T company</span><br><span class="line">Hi Username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>vim ~/.ssh/config<br>然后复制以下内容到 config 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Host personal</span><br><span class="line">   User git</span><br><span class="line">   HostName github.com</span><br><span class="line">   IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_personal</span><br><span class="line">   ProxyCommand nc -X 5 -x 127.0.0.1:6153 %h %p</span><br><span class="line"></span><br><span class="line">Host company</span><br><span class="line">   User git</span><br><span class="line">   HostName github.com</span><br><span class="line">   IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_company</span><br><span class="line">   ProxyCommand nc -X 5 -x 127.0.0.1:6153 %h %p</span><br></pre></td></tr></table></figure><p>clone 仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原先命令：git clone git@github.com:Username&#x2F;test.git</span><br><span class="line">修改命令：git clone git@personal:Username&#x2F;test.git</span><br></pre></td></tr></table></figure><p>觉得这样太麻烦？我觉得也是，所以可以在 .zshrc 中添加以下两个 function，然后 source .zshrc 就可以了，配置好之后直接复制地址栏里的 URL 然后在终端输入 personal 或者 company 就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">personal()&#123;</span><br><span class="line">url&#x3D;$(pbpaste|sed &#39;s&#x2F;https:\&#x2F;\&#x2F;github.com\&#x2F;&#x2F;ssh:\&#x2F;\&#x2F;personal\&#x2F;&#x2F;&#39;)</span><br><span class="line">git clone $url &amp;&amp; cd $(basename $(pbpaste))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">company()&#123;</span><br><span class="line">url&#x3D;$(pbpaste|sed &#39;s&#x2F;https:\&#x2F;\&#x2F;github.com\&#x2F;&#x2F;ssh:\&#x2F;\&#x2F;company\&#x2F;&#x2F;&#39;)</span><br><span class="line">git clone $url &amp;&amp; cd $(basename $(pbpaste))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/media/200201gitclone.png"></p><p>再打开 Surge Dashboard 看一下，可以看到 nc 转发代理也是正常工作的。</p><p><img src="/media/200203sshlog.png"></p><p>一个 alias 从终端打开 GitHub 仓库 URL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias go&#x3D;&quot;open &#96;git remote -v|awk &#39;&#x2F;fetch&#x2F;&#123;print $2&#125;&#39;|perl -pe &#39;s&#x2F;git.*?:|ssh:\&#x2F;\&#x2F;.*?\&#x2F;&#x2F;https:\&#x2F;\&#x2F;github.com\&#x2F;&#x2F;&#39;|sed &#39;s&#x2F;\.git$&#x2F;&#x2F;&#39;&#96;&quot;</span><br></pre></td></tr></table></figure><p>如果你有使用 hub 也可以使用 hub browse 命令实现</p><h3 id="git-commit-添加-GPG-签名认证"><a href="#git-commit-添加-GPG-签名认证" class="headerlink" title="git commit 添加 GPG 签名认证"></a>git commit 添加 GPG 签名认证</h3><p>安装 GPG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install gnupg</span><br></pre></td></tr></table></figure><p>生成公私钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">简单版本</span><br><span class="line">gpg --generate-key</span><br><span class="line"></span><br><span class="line">完整版本</span><br><span class="line">gpg --full-generate-key</span><br><span class="line"></span><br><span class="line">查看信息</span><br><span class="line">gpg --list-keys --keyid-format LONG</span><br></pre></td></tr></table></figure><p>发送公钥到公钥服务器 (如果需要)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">发送公钥</span><br><span class="line">gpg --keyserver hkp:&#x2F;&#x2F;pool.sks-keyservers.net --send-keys gpg -a --export 140A9123A5C9FCA6178E2A04BC7A876AA744BDCF </span><br><span class="line"></span><br><span class="line">检查公钥</span><br><span class="line">gpg --keyserver hkp:&#x2F;&#x2F;pool.sks-keyservers.net --recv-keys 140A9123A5C9FCA6178E2A04BC7A876AA744BDCF</span><br></pre></td></tr></table></figure><p>输出公钥并设置 GitHub GPG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg -a --export 140A9123A5C9FCA6178E2A04BC7A876AA744BDCF|pbcopy</span><br></pre></td></tr></table></figure><p>配置并测试 GPG sign</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.signingkey 140A9123A5C9FCA6178E2A04BC7A876AA744BDCF</span><br><span class="line">git config --global commit.gpgsign true</span><br><span class="line">git commit -m &#39;gpg sign test&#39;</span><br></pre></td></tr></table></figure><h3 id="从命令行创建-GitHub-仓库"><a href="#从命令行创建-GitHub-仓库" class="headerlink" title="从命令行创建 GitHub 仓库"></a>从命令行创建 GitHub 仓库</h3><ol><li>brew install hub</li><li>git init test &amp;&amp; cd test &amp;&amp; hub create test </li></ol><p>我个人习惯使用 SSH 协议连接，所以需要的可以在这里修改一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin ssh:&#x2F;&#x2F;personal&#x2F;JamesHopbourn&#x2F;test</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="git-删掉指定内容"><a href="#git-删掉指定内容" class="headerlink" title="git 删掉指定内容"></a>git 删掉指定内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo test.txt filter&#x3D;rm_conf &gt;&gt; .gitattributes</span><br><span class="line">echo -e &quot;username: jameshopbourn\npassword: mypassword&quot; &gt; test.txt</span><br><span class="line">git config filter.rm_conf.clean &quot;sed &#39;s&#x2F;password:.*&#x2F;password:&#x2F;&#39;&quot;</span><br><span class="line">git add -A ; git commit -m &#39;sed test&#39; ; git push</span><br></pre></td></tr></table></figure><h3 id="git-clone-指定文件夹"><a href="#git-clone-指定文件夹" class="headerlink" title="git clone 指定文件夹"></a>git clone 指定文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">brew install svn</span><br><span class="line"></span><br><span class="line">建议先添加代理</span><br><span class="line">vim ~&#x2F;.subversion&#x2F;servers</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">http-proxy-host &#x3D; 127.0.0.1</span><br><span class="line">http-proxy-port &#x3D; 6152</span><br><span class="line">http-proxy-compression &#x3D; no</span><br><span class="line"></span><br><span class="line">查看仓库中的目录</span><br><span class="line">svn ls https:&#x2F;&#x2F;github.com&#x2F;JamesHopbourn&#x2F;Apple-Automation&#x2F;trunk</span><br><span class="line"></span><br><span class="line">现在仓库中的指定目录</span><br><span class="line">svn checkout https:&#x2F;&#x2F;github.com&#x2F;JamesHopbourn&#x2F;Apple-Automation&#x2F;trunk&#x2F;Shortcuts ~&#x2F;Desktop</span><br><span class="line"></span><br><span class="line">更新仓库内容</span><br><span class="line">svn status</span><br><span class="line">svn add *</span><br><span class="line">svn commit -m &quot;SVN commit&quot;</span><br><span class="line"></span><br><span class="line">拉取仓库内容</span><br><span class="line">svn update</span><br></pre></td></tr></table></figure><h3 id="passprash-ssh-agent"><a href="#passprash-ssh-agent" class="headerlink" title="passprash + ssh-agent"></a>passprash + ssh-agent</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.ssh&#x2F;config</span><br></pre></td></tr></table></figure><p>在需要配置 ssh-agent 的 host 中添加: AddKeysToAgent yes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host personal</span><br><span class="line">  User git</span><br><span class="line">  HostName github.com</span><br><span class="line">  AddKeysToAgent yes</span><br><span class="line">  IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_personal</span><br><span class="line">  ProxyCommand nc -X 5 -x 127.0.0.1:6153 %h %p</span><br></pre></td></tr></table></figure><p>vim ~/.zshrc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugin&#x3D;(... ssh-agent)</span><br><span class="line"></span><br><span class="line">zstyle :omz:plugins:ssh-agent lifetime 4h</span><br><span class="line">zstyle :omz:plugins:ssh-agent identities id_rsa_personal id_rsa_company</span><br></pre></td></tr></table></figure><h3 id="git-alias"><a href="#git-alias" class="headerlink" title="git alias"></a>git alias</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.last &#39;log -1&#39;</span><br></pre></td></tr></table></figure><h3 id="git-忽略文件"><a href="#git-忽略文件" class="headerlink" title="git 忽略文件"></a>git 忽略文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim .gitignore</span><br><span class="line"></span><br><span class="line">#忽略C文件夹下的.o文件</span><br><span class="line">C&#x2F;*.o</span><br><span class="line">#忽略根目录下的 .DS_Store 文件</span><br><span class="line">.DS_Store</span><br><span class="line">#忽略所有目录下的 .DS_Store 文件</span><br><span class="line">.DS_Store?</span><br><span class="line">#忽略整个</span><br><span class="line">Objective-C&#x2F;build</span><br></pre></td></tr></table></figure><h3 id="hub-pull-request"><a href="#hub-pull-request" class="headerlink" title="hub pull request"></a>hub pull request</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hub clone https:&#x2F;&#x2F;github.com&#x2F;JamesHopbourn&#x2F;Roadbike-knowledge </span><br><span class="line">cd Roadbike-knowledge</span><br><span class="line">hub fork</span><br><span class="line">git remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Username&#x2F;Roadbike-knowledge</span><br><span class="line"></span><br><span class="line">git checkout -b test</span><br><span class="line"></span><br><span class="line">vim test.txt</span><br><span class="line">gaa</span><br><span class="line">gcsm test.txt</span><br><span class="line">git push --set-upstream origin test</span><br><span class="line"></span><br><span class="line">hub pull-request --base JamesHopbourn:master --head Username:test -m 测试内容</span><br></pre></td></tr></table></figure><h3 id="travis-CI-with-python"><a href="#travis-CI-with-python" class="headerlink" title="travis-CI with python"></a>travis-CI with python</h3><p><a href="https://jameshopbourn.github.io/2020/02/16/travis%20with%20matplotlib">matplotlib with Travis-CI</a></p><h3 id="hide-git-push-email"><a href="#hide-git-push-email" class="headerlink" title="hide git push email"></a>hide git push email</h3><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://program-think.blogspot.com/2016/03/GitHub-Security-Tips.html" target="_blank" rel="noopener">使用 GitHub 的几种方式——兼谈安全性和隐匿性的经验</a><br><a href="https://juejin.im/post/5da3ec32e51d45784d3f865d" target="_blank" rel="noopener">Git:使用GPG签名Commit</a><br><a href="http://llever.com/hub-zh/hub-create.1.zh.html" target="_blank" rel="noopener">hub 中文文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;配置两个或多个-git-账号&quot;&gt;&lt;a href=&quot;#配置两个或多个-git-账号&quot; class=&quot;headerlink&quot; title=&quot;配置两个或多个 git 账号&quot;&gt;&lt;/a&gt;配置两个或多个 git 账号&lt;/h3&gt;&lt;p&gt;TL;DR: 生成两个不同的公私钥添加到两个 GitHub 账号，新建 SSH config 文件，Done.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="git" scheme="https://jameshopbourn.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>使用 git 管理软件列表</title>
    <link href="https://jameshopbourn.github.io/2020/01/01/git%20manage%20list/"/>
    <id>https://jameshopbourn.github.io/2020/01/01/git%20manage%20list/</id>
    <published>2020-01-01T14:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>在用户目录下 clone GitHub 上面创建好的 dotfile 仓库，zshrc 配置更新 function</p><a id="more"></a><h2 id="zshrc-function"><a href="#zshrc-function" class="headerlink" title="zshrc function"></a>zshrc function</h2><p>function 功能：导出现在安装的 Homebrew、pip、npm、mas 软件清单，与原始清单取并集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">update()&#123;</span><br><span class="line">    dir&#x3D;&quot;$HOME&#x2F;dotfile&#x2F;Backup&quot;</span><br><span class="line">    echo &quot;$(brew list -1 &gt;&gt; $dir&#x2F;brew.txt &amp;&amp; sort -n $dir&#x2F;brew.txt | uniq)&quot; &gt; $dir&#x2F;brew.txt</span><br><span class="line">    echo &quot;$(brew cask list -1 &gt;&gt; $dir&#x2F;cask.txt &amp;&amp; sort -n $dir&#x2F;cask.txt | uniq)&quot; &gt; $dir&#x2F;cask.txt</span><br><span class="line">    echo &quot;$(mas list| awk &#39;&#123;print $1&#125;&#39; &gt;&gt; $dir&#x2F;mas.txt &amp;&amp; sort -n $dir&#x2F;mas.txt | uniq)&quot; &gt; $dir&#x2F;mas.txt</span><br><span class="line">    echo &quot;$(pip freeze 2&gt;&#x2F;dev&#x2F;null &gt;&gt; $dir&#x2F;pip.txt &amp;&amp; sort -n $dir&#x2F;pip.txt | uniq)&quot; &gt; $dir&#x2F;pip.txt</span><br><span class="line">    echo &quot;$(pip3 freeze &gt;&gt; $dir&#x2F;pip3.txt &amp;&amp; sort -n $dir&#x2F;pip3.txt | uniq)&quot; &gt; $dir&#x2F;pip3.txt</span><br><span class="line">    echo &quot;$(npm ls -g --depth 0 &gt;&gt; $dir&#x2F;npm.txt &amp;&amp; sort -n $dir&#x2F;npm.txt | uniq)&quot; &gt; $dir&#x2F;npm.txt</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="更新软件清单"><a href="#更新软件清单" class="headerlink" title="更新软件清单"></a>更新软件清单</h2><p>安装一下 tomcat 来进行测试<br><img src="/media/brewtomcat.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;dotfile;update;gaa;gcsm tomcat;gp</span><br></pre></td></tr></table></figure><p><img src="/media/gittomcat.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;在用户目录下 clone GitHub 上面创建好的 dotfile 仓库，zshrc 配置更新 function&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="macOS" scheme="https://jameshopbourn.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>CTF 压缩包伪加密</title>
    <link href="https://jameshopbourn.github.io/2020/01/01/ZIP%20Fake%20Encrypt/"/>
    <id>https://jameshopbourn.github.io/2020/01/01/ZIP%20Fake%20Encrypt/</id>
    <published>2020-01-01T01:39:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>第一行 0x06 位置处的 0000 是全局方式标记，看是否加密，可以只看第一个00，第二字节00可以忽略。00表示无加密，01表示有加密。只要是偶数就是无加密，例如00,02,04等，奇数就是有加密，例如01,03,09 等。使用 Synalyze It! Pro 即可看到 ZIP 压缩包的数据结构。</p><a id="more"></a><p><img src="/media/zipfakeencrypt.png"></p><h2 id="新建压缩包："><a href="#新建压缩包：" class="headerlink" title="新建压缩包："></a>新建压缩包：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim flag.txt</span><br><span class="line">7z a -tzip flag.zip flag.txt</span><br></pre></td></tr></table></figure><p>请注意，使用不同压缩命令得到的压缩包内容虽然一样，但是文件结构却略有区别，在这个例子里使用 7z 命令进行压缩，使用其他命令压缩将会得到不同结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">7z 压缩结果：</span><br><span class="line">00000000: 504b 0304 0a03 0000 0000 af66 2650 08fd  PK.........f&amp;P..</span><br><span class="line">00000010: 825a 0400 0000 0400 0000 0800 0000 666c  .Z............fl</span><br><span class="line">00000020: 6167 2e74 7874 3132 330a 504b 0102 3f03  ag.txt123.PK..?.</span><br><span class="line">00000030: 0a03 0000 0000 af66 2650 08fd 825a 0400  .......f&amp;P...Z..</span><br><span class="line">00000040: 0000 0400 0000 0800 2400 0000 0000 0000  ........$.......</span><br><span class="line">00000050: 2080 a481 0000 0000 666c 6167 2e74 7874   .......flag.txt</span><br><span class="line">00000060: 0a00 2000 0000 0000 0100 1800 0081 763d  .. ...........v&#x3D;</span><br><span class="line">00000070: 4dc4 d501 0043 6249 4dc4 d501 0081 763d  M....CbIM.....v&#x3D;</span><br><span class="line">00000080: 4dc4 d501 504b 0506 0000 0000 0100 0100  M...PK..........</span><br><span class="line">00000090: 5a00 0000 2a00 0000 0000                 Z...*.....</span><br><span class="line"></span><br><span class="line">zip 压缩结果：</span><br><span class="line">00000000: 504b 0304 0a00 0000 0000 af66 2650 08fd  PK.........f&amp;P..</span><br><span class="line">00000010: 825a 0400 0000 0400 0000 0800 1c00 666c  .Z............fl</span><br><span class="line">00000020: 6167 2e74 7874 5554 0900 034a bd12 5e55  ag.txtUT...J..^U</span><br><span class="line">00000030: bd12 5e75 780b 0001 04f5 0100 0004 1400  ..^ux...........</span><br><span class="line">00000040: 0000 3132 330a 504b 0102 1e03 0a00 0000  ..123.PK........</span><br><span class="line">00000050: 0000 af66 2650 08fd 825a 0400 0000 0400  ...f&amp;P...Z......</span><br><span class="line">00000060: 0000 0800 1800 0000 0000 0100 0000 a481  ................</span><br><span class="line">00000070: 0000 0000 666c 6167 2e74 7874 5554 0500  ....flag.txtUT..</span><br><span class="line">00000080: 034a bd12 5e75 780b 0001 04f5 0100 0004  .J..^ux.........</span><br><span class="line">00000090: 1400 0000 504b 0506 0000 0000 0100 0100  ....PK..........</span><br><span class="line">000000a0: 4e00 0000 4600 0000 0000                 N...F.....</span><br><span class="line"></span><br><span class="line">macOS 归档实用工具压缩结果：</span><br><span class="line">00000000: 504b 0304 1400 0800 0800 af66 2650 0000  PK.........f&amp;P..</span><br><span class="line">00000010: 0000 0000 0000 0000 0000 0800 1000 666c  ..............fl</span><br><span class="line">00000020: 6167 2e74 7874 5558 0c00 70bd 125e 4abd  ag.txtUX..p..^J.</span><br><span class="line">00000030: 125e f501 1400 3334 32e6 0200 504b 0708  .^....342...PK..</span><br><span class="line">00000040: 08fd 825a 0600 0000 0400 0000 504b 0102  ...Z........PK..</span><br><span class="line">00000050: 1503 1400 0800 0800 af66 2650 08fd 825a  .........f&amp;P...Z</span><br><span class="line">00000060: 0600 0000 0400 0000 0800 0c00 0000 0000  ................</span><br><span class="line">00000070: 0000 0040 a481 0000 0000 666c 6167 2e74  ...@......flag.t</span><br><span class="line">00000080: 7874 5558 0800 70bd 125e 4abd 125e 504b  xtUX..p..^J..^PK</span><br><span class="line">00000090: 0506 0000 0000 0100 0100 4200 0000 4c00  ..........B...L.</span><br><span class="line">000000a0: 0000 0000                                ....</span><br></pre></td></tr></table></figure><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">导出十六进制：</span><br><span class="line">xxd flag.zip flag.dump</span><br><span class="line">使用 sed 配合正则表达式进行替换：</span><br><span class="line">sed -i &#39;&#39; -E &#39;1s&#x2F;[0-9]&#123;4&#125;&#x2F;0100&#x2F;4&#39; flag.dump</span><br><span class="line">导出新压缩包：</span><br><span class="line">xxd -r flag.dump &gt; FakeEncrypt-flag.zip</span><br></pre></td></tr></table></figure><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">导出十六进制：</span><br><span class="line">xxd FakeEncrypt-flag.zip flag.dump</span><br><span class="line">使用 sed 配合正则表达式进行替换：</span><br><span class="line">sed -i &#39;&#39; -E &#39;1s&#x2F;[0-9]&#123;4&#125;&#x2F;0000&#x2F;4&#39; flag.dump</span><br><span class="line">导出新压缩包：</span><br><span class="line">xxd -r flag.dump &gt; UnFakeEncrypt-flag.zip</span><br></pre></td></tr></table></figure><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>嫌这样操作太麻烦，在实际运用中不方便可以添加一个 function 到 zshrc 里面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fakeency()&#123;</span><br><span class="line">xxd $1 $1.dump</span><br><span class="line">sed -i &#39;&#39; -E &#39;1s&#x2F;[0-9]&#123;4&#125;&#x2F;0100&#x2F;4&#39; $1.dump</span><br><span class="line">xxd -r $1.dump &gt; FakeEncrypt-$1</span><br><span class="line">rm $1.dump</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unency()&#123;</span><br><span class="line">xxd $1 $1.dump</span><br><span class="line">sed -i &#39;&#39; -E &#39;1s&#x2F;[0-9]&#123;4&#125;&#x2F;0000&#x2F;4&#39; $1.dump</span><br><span class="line">xxd -r $1.dump &gt; UnFakeEncrypt-$1</span><br><span class="line">rm $1.dump</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;第一行 0x06 位置处的 0000 是全局方式标记，看是否加密，可以只看第一个00，第二字节00可以忽略。00表示无加密，01表示有加密。只要是偶数就是无加密，例如00,02,04等，奇数就是有加密，例如01,03,09 等。使用 Synalyze It! Pro 即可看到 ZIP 压缩包的数据结构。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://jameshopbourn.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>YouTube 推荐频道列表</title>
    <link href="https://jameshopbourn.github.io/2019/12/31/YouTube%20Recommand/"/>
    <id>https://jameshopbourn.github.io/2019/12/31/YouTube%20Recommand/</id>
    <published>2019-12-31T11:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<head>     <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/all.js"></script>     <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js"></script> <meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/atom.xml" title="James Notes" type="application/atom+xml"></head> <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"><h2 id="言论"><a href="#言论" class="headerlink" title="言论"></a>言论</h2><p><a href="https://www.youtube.com/channel/UCv361SF6FKznoGPKEFG9Yhw" target="_blank" rel="noopener">陈秋实官方频道</a></p><a id="more"></a><h2 id="科技"><a href="#科技" class="headerlink" title="科技"></a>科技</h2><p><a href="https://www.youtube.com/channel/UCDznDkN2wxYBeRdFTA2oC7Q" target="_blank" rel="noopener">Learn OmniFocus</a><br><a href="https://www.youtube.com/channel/UCmPxUduEw4oLFvzidCaRuTg" target="_blank" rel="noopener">Men’s Game 玩物誌</a><br><a href="https://www.youtube.com/channel/UC_Ks6fcoGgv4LotTZszYs-g" target="_blank" rel="noopener">ZEALER China</a><br><a href="https://www.youtube.com/channel/UC4JEq8vlhk_MWUNNtZzq-zw" target="_blank" rel="noopener">电动派大星</a><br><a href="https://www.youtube.com/channel/UCuhAUKCdKrjYoMiJQc74ZkQ" target="_blank" rel="noopener">TuTu生活志</a><br><a href="https://www.youtube.com/channel/UC8raOG7HXJoCUygx219fU4A" target="_blank" rel="noopener">Christopher Lawley</a><br><a href="https://www.youtube.com/channel/UCT-GpMtIFhX9EMA0Eauevhw" target="_blank" rel="noopener">Tech Craft</a></p><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><p><a href="https://www.youtube.com/channel/UCCEG92L1pQRvVmTKcGa3V4g" target="_blank" rel="noopener">音樂製作課Shawn</a><br><a href="https://www.youtube.com/channel/UCVXstWyJeO6No3jYELxYrjg" target="_blank" rel="noopener">NiceChord (好和弦)</a><br><a href="https://www.youtube.com/channel/UCfYEdvKQekP7RiemXC0o92w" target="_blank" rel="noopener">Kyle Beats</a></p><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p><a href="https://www.youtube.com/channel/UCFI8X90NLp4C5Qu7X0DVGDA" target="_blank" rel="noopener">Mike Bill</a><br><a href="https://www.youtube.com/channel/UC6tPP3jOTKgjqfDgqMsaG4g" target="_blank" rel="noopener">JS 神技能</a><br><a href="https://www.youtube.com/channel/UCii04BCvYIdQvshrdNDAcww" target="_blank" rel="noopener">悟空的日常</a><br><a href="https://www.youtube.com/channel/UCmgoFtSRdfFNP6Y5vhSY3vg" target="_blank" rel="noopener">nt l</a><br><a href="https://www.youtube.com/channel/UCuhAUKCdKrjYoMiJQc74ZkQ" target="_blank" rel="noopener">TuTu生活志</a><br><a href="https://www.youtube.com/channel/UCxcuxsAjdnQaiRwYb5CVISw" target="_blank" rel="noopener">翼王</a><br><a href="https://www.youtube.com/channel/UCpPswAyGzdRwWmiW5oTNnvA" target="_blank" rel="noopener">BIGDONGDONG</a><br><a href="https://www.youtube.com/channel/UCaMih5WXqoXq7Hg0S_XJdOg" target="_blank" rel="noopener">Vedio Talk</a></p><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><p><a href="https://www.youtube.com/channel/UCdyjiB5H8Pu7aDTNVXTTpcg" target="_blank" rel="noopener">周莫烦</a><br><a href="https://www.youtube.com/channel/UCmlhPmTdqYhRWwWZWSIBwGw" target="_blank" rel="noopener">代码真香</a><br><a href="https://www.youtube.com/channel/UC9PZ_j30JhfgjOrJZAtYzRw" target="_blank" rel="noopener">CodeSheep程序羊</a></p><h2 id="单车"><a href="#单车" class="headerlink" title="单车"></a>单车</h2><p><a href="https://www.youtube.com/channel/UCHGBovOEgaYcz0bz5-Kt7cQ" target="_blank" rel="noopener">自行车笔记</a><br><a href="https://www.youtube.com/channel/UCqX4XnC-n0rmkJtPX8m5B9A" target="_blank" rel="noopener">M.C K2</a><br><a href="https://www.youtube.com/channel/UC4_vbV09DEhGZn-9UP8R9Dw" target="_blank" rel="noopener">單車時代CYCLINGTIME</a><br><a href="https://www.youtube.com/channel/UCdALMUvTSedwNjfVRJcHmTg/videos" target="_blank" rel="noopener">单车迷情</a><br><a href="https://www.youtube.com/channel/UCWhqDT419HlIyKPXkxhX1mg" target="_blank" rel="noopener">單車誌</a><br><a href="https://www.youtube.com/channel/UCfjzrJwlvxumk0oMWNx7fXQ" target="_blank" rel="noopener">Gee Milner</a></p><h2 id="科普"><a href="#科普" class="headerlink" title="科普"></a>科普</h2><p><a href="https://www.youtube.com/channel/UCUGJ-yKqQHl4FSZwUmGpiUg" target="_blank" rel="noopener">回形针PaperClip</a><br><a href="https://www.youtube.com/channel/UCVXSO8rgWWroELnYB9UUEmA" target="_blank" rel="noopener">Linda Loves Cycling</a><br><a href="https://www.youtube.com/channel/UC5ud8tsrZC57bQupND8uAiw" target="_blank" rel="noopener">毕导导</a><br><a href="https://www.youtube.com/channel/UCSs4A6HYKmHA2MG_0z-F0xw" target="_blank" rel="noopener">李永乐老师</a><br><a href="https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw" target="_blank" rel="noopener">3Blue1Brown</a><br><a href="https://www.youtube.com/channel/UCaRiHLZAMMkRvpOvH7QbHvA/videos" target="_blank" rel="noopener">Mec_Mon</a></p><h2 id="商业"><a href="#商业" class="headerlink" title="商业"></a>商业</h2><p><a href="https://www.youtube.com/channel/UCerJL6HRAKWhzMz4rcH5HmA" target="_blank" rel="noopener">Men’s Business</a></p><h2 id="金融"><a href="#金融" class="headerlink" title="金融"></a>金融</h2><p><a href="https://m.youtube.com/channel/UCg9zI64pEB_3xwJPur6isiQ" target="_blank" rel="noopener">金融交易技术分析</a><br><a href="https://www.youtube.com/channel/UCKI-awVP1ftTyjotSLVf-EQ" target="_blank" rel="noopener">金钱语言 钱会说话 雨生百谷</a></p><h2 id="成长"><a href="#成长" class="headerlink" title="成长"></a>成长</h2><p><a href="https://www.youtube.com/channel/UChjHWpmNm-3HbLFkQ3TPXaA" target="_blank" rel="noopener">Better Leaf 好葉</a></p><h2 id="穿搭"><a href="#穿搭" class="headerlink" title="穿搭"></a>穿搭</h2><p><a href="https://www.youtube.com/channel/UCGU9dDzP5t23URIMRKi1SZA" target="_blank" rel="noopener">艾薩克Isaac</a></p><h2 id="娱乐"><a href="#娱乐" class="headerlink" title="娱乐"></a>娱乐</h2><p><a href="https://www.youtube.com/channel/UClaEdLrmti779-tyovta8zw" target="_blank" rel="noopener">阿木爷爷 Grandpa Amu</a><br><a href="https://www.youtube.com/channel/UCdRKafyb--geO9ySg6CbhYA" target="_blank" rel="noopener">宇哥讲电影</a><br><a href="https://www.youtube.com/channel/UCTDy6DXTj1xwKWgVc5lPJrQ" target="_blank" rel="noopener">笑沧海的锁艺教学</a><br><a href="https://www.youtube.com/channel/UCg0m_Ah8P_MQbnn77-vYnYw" target="_blank" rel="noopener">美食作家王刚</a><br><a href="https://www.youtube.com/channel/UC6UULuHNgN4CRw8dCXbiqqg" target="_blank" rel="noopener">TheBondExperience</a><br><a href="https://www.youtube.com/channel/UCzutZyweKe-Lytw4dIemIIQ" target="_blank" rel="noopener">蛊惑帮</a><br><a href="https://www.youtube.com/channel/UCeMuDTsMiEEYfsuBHFo2aFg" target="_blank" rel="noopener">闲D嘞</a><br><a href="https://www.youtube.com/channel/UCAL3JXZSzSm8AlZyD3nQdBA" target="_blank" rel="noopener">Primitive Technology</a><br><a href="https://www.youtube.com/channel/UCopwDG5Syp_a_U9bRWYqoeA" target="_blank" rel="noopener">极速拍档 Speedsters</a></p><h2 id="旅游"><a href="#旅游" class="headerlink" title="旅游"></a>旅游</h2><p><a href="https://www.youtube.com/channel/UC-x-90EoRqiEHMJFavFETPQ" target="_blank" rel="noopener">冒险雷探长</a><br><a href="https://www.youtube.com/channel/UCXAHgRJ9DLcxRQZWiSJnxrg" target="_blank" rel="noopener">旅行嘉日记</a></p>]]></content>
    
    <summary type="html">
    
      &lt;head&gt; 
    &lt;script defer src=&quot;https://use.fontawesome.com/releases/v5.0.13/js/all.js&quot;&gt;&lt;/script&gt; 
    &lt;script defer src=&quot;https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js&quot;&gt;&lt;/script&gt; 
&lt;meta name=&quot;generator&quot; content=&quot;Hexo 4.2.1&quot;&gt;&lt;link rel=&quot;alternate&quot; href=&quot;/atom.xml&quot; title=&quot;James Notes&quot; type=&quot;application/atom+xml&quot;&gt;
&lt;/head&gt; 
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.0.13/css/all.css&quot;&gt;

&lt;h2 id=&quot;言论&quot;&gt;&lt;a href=&quot;#言论&quot; class=&quot;headerlink&quot; title=&quot;言论&quot;&gt;&lt;/a&gt;言论&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCv361SF6FKznoGPKEFG9Yhw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;陈秋实官方频道&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="YouTube" scheme="https://jameshopbourn.github.io/tags/YouTube/"/>
    
      <category term="清单" scheme="https://jameshopbourn.github.io/tags/%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>iOS 效率软件列表整理</title>
    <link href="https://jameshopbourn.github.io/2019/12/31/iOS%20Applications/"/>
    <id>https://jameshopbourn.github.io/2019/12/31/iOS%20Applications/</id>
    <published>2019-12-30T17:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="图片编辑"><a href="#图片编辑" class="headerlink" title="图片编辑"></a>图片编辑</h2><p>Annotable：图片标注、调色板<br>Picsew：长图拼接、水印添加、格式化状态栏<br>LightScreen：HEX 值读取、软件图标下载</p><a id="more"></a><h2 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h2><p>OmniFocus：近期任务管理<br>Things：长远任务管理<br>Due：重复任务管理、临时重要提醒<br>Launch Center Pro：配合 Due 添加提醒电话、短信</p><h2 id="文字工具"><a href="#文字工具" class="headerlink" title="文字工具"></a>文字工具</h2><p>Drafts：文本分发、内容创做中心<br>Bear：笔记存储、整理<br>Ulysses：不公开发布的长文撰写<br>MWeb：少数派写稿、流程图、LaTeX<br>Pin：生成图片短文、剪切板内容暂存<br>锤子便签：生成图片长文<br>TextExpander：配合 Drafts 使用<br>MindNode：生成偏向美观的思维导图<br>iThoughts：生成偏向复杂的思维导图</p><h2 id="日程安排"><a href="#日程安排" class="headerlink" title="日程安排"></a>日程安排</h2><p>Timepage：添加、查看日程<br>Days Matter：纪念日、朋友生日提醒</p><h2 id="加密存储"><a href="#加密存储" class="headerlink" title="加密存储"></a>加密存储</h2><p>1Password：老牌密码管理软件<br>Disk Decipher：iOS VeraCrypt 客户端</p><h2 id="代码工具"><a href="#代码工具" class="headerlink" title="代码工具"></a>代码工具</h2><p>Textastic：编辑 Working Copy 代码<br>Scriptable：JavaScript IDE<br>Pythonista：Python IDE<br>Working Copy：git 客户端<br>PCal：虽然是计算器，但是用来做进制转换</p><h2 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h2><p>Surge：订阅购买的 SS 节点<br>QuantumultX：连接自建 v2ray 节点<br>Hyperapp：VPS 自动化部署软件</p><h2 id="阅读软件"><a href="#阅读软件" class="headerlink" title="阅读软件"></a>阅读软件</h2><p>Reeder：Inoreader 订阅、微博关注订阅<br>PDF Expert：PDF 阅读、Dropbox 文件夹同步</p><h2 id="番茄钟"><a href="#番茄钟" class="headerlink" title="番茄钟"></a>番茄钟</h2><p>Forest：支持 3 小时的番茄钟以及种树功能</p><h2 id="邮件收发"><a href="#邮件收发" class="headerlink" title="邮件收发"></a>邮件收发</h2><p>邮件：登录沟通邮箱，跟人收发邮件<br>Spark：登录收件邮箱，接收订阅邮件</p><h2 id="广告拦截"><a href="#广告拦截" class="headerlink" title="广告拦截"></a>广告拦截</h2><p>AdGuard：拦截广告，特别是 YouTube 广告</p><h2 id="玩转-App-的两个建议"><a href="#玩转-App-的两个建议" class="headerlink" title="玩转 App 的两个建议"></a>玩转 App 的两个建议</h2><ol><li>某个类型的软件直接去找最好的最贵的买下来开始用就好了。这样能节省很多精力和时间，每次我看到别人再推荐同类型的软件的时候我就可以完全可以不听不看，不用去花时间再学习新软件。</li><li>我个人同类型的软件出于不同需求考虑一般会使用两个，让软件「专门化」。类似于生物里细胞分化成各种不同细胞器的概念一样，让软件专门化是提高效率的另一个途径。例如：<br>任务管理：OmniFocus 保存当下任务；Things 保存长期任务<br>提醒事项：Reminders 通过 Siri 添加临时提醒；Due 添加长期重复提醒事项<br>思维导图：MindNode 简单思维导图制作；iThoughts 复杂思维导图制作<br>邮件：Mail 和开发者联系，点击软件里面的 feedback 就可以发邮件；Spark 接收验证码、订阅邮件和绑定账号</li></ol><p>Surge、1Password、Forest、FancyDays、Annotable 等软件质量和口碑在同类产品中皆属上乘，所以这些类型的软件我只用它们，这些-来一直都是。</p><p>用 iPhone 也是类似的道理，省心。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;图片编辑&quot;&gt;&lt;a href=&quot;#图片编辑&quot; class=&quot;headerlink&quot; title=&quot;图片编辑&quot;&gt;&lt;/a&gt;图片编辑&lt;/h2&gt;&lt;p&gt;Annotable：图片标注、调色板&lt;br&gt;Picsew：长图拼接、水印添加、格式化状态栏&lt;br&gt;LightScreen：HEX 值读取、软件图标下载&lt;/p&gt;
    
    </summary>
    
    
      <category term="清单" scheme="https://jameshopbourn.github.io/categories/%E6%B8%85%E5%8D%95/"/>
    
      <category term="效率" scheme="https://jameshopbourn.github.io/categories/%E6%B8%85%E5%8D%95/%E6%95%88%E7%8E%87/"/>
    
    
      <category term="iOS" scheme="https://jameshopbourn.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>CTF 二维码出题解题思路</title>
    <link href="https://jameshopbourn.github.io/2019/12/30/QRCode%20Bniary/"/>
    <id>https://jameshopbourn.github.io/2019/12/30/QRCode%20Bniary/</id>
    <published>2019-12-30T12:05:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>昨天晚上没睡着突然有个这么个想法，觉得还行，故意挖了个坑会让人觉得这是个二进制去处理</p><link href="http://apps.bdimg.com/libs/highlight.js/9.1.0/styles/default.min.css" rel="stylesheet"><script src="http://apps.bdimg.com/libs/highlight.js/9.1.0/highlight.min.js"></script><script>hljs.initHighlightingOnLoad();</script><a id="more"></a><p>H4sIAPHrCV4AA4VSWw7AIAj732nk/pebZmG0pUQSDcqrBSJQ1pZzf3qIrF/QJ99l<br>q1j0TB1t6lk+N8+s6HMyTkTFOJkdH89cY51FaxbW/oP3PIGpr5zD9UXz+04rImag<br>DKfJ9X4yc90aroh7gnFaR7Ez+z7J3nufU6v5Xep7wgx9XtSeF2yR0OxzAwAA</p><h2 id="出题"><a href="#出题" class="headerlink" title="出题"></a>出题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">生成 flag 二维码的 ASCII：qrencode -t ASCII &#39;flag:jbcool&#39; &gt; new.txt</span><br><span class="line">井号和空格替换：sed -i &#39;&#39; -e &#39;s&#x2F; &#x2F;0&#x2F;g&#39; -e &#39;s&#x2F;#&#x2F;1&#x2F;g&#39; new.txt</span><br><span class="line">压缩为一行数字：tr  &quot;\n&quot; &quot; &quot; &lt; new.txt &gt; edit.txt</span><br><span class="line">删去多余的空格：sed -i &#39;&#39; -e &#39;s&#x2F; &#x2F;&#x2F;g&#39; edit.txt</span><br><span class="line">压缩 01 字符：cat edit.txt | gzip &gt; edit.zip</span><br><span class="line">base64 编码：openssl base64 -in edit.zip &gt; base.txt</span><br></pre></td></tr></table></figure><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><ol><li>base64 解码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl base64 -d -in base.txt &gt; edit.zip</span><br><span class="line">unzip edit.zip</span><br></pre></td></tr></table></figure><ol start="2"><li>由于已经将多行文本压缩为一行，所以需要先对这一行数字进行分割，写一个小脚本实现：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var character &#x3D; process.argv[2];</span><br><span class="line"></span><br><span class="line">function isInteger(obj) &#123;</span><br><span class="line">    return obj%1 &#x3D;&#x3D;&#x3D; 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for (var i&#x3D;0;i&lt;50;i++)</span><br><span class="line">&#123;</span><br><span class="line">line &#x3D; character&#x2F;i</span><br><span class="line">if (isInteger(line) &#x3D;&#x3D; true)&#123;</span><br><span class="line">console.log(i +&#39;行:&#39;+ line)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>计算文件字符数并减去 1 字符的空格，然后运行这个 JS</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wc news.txt</span><br><span class="line">       1       1     883 news.txt</span><br><span class="line">node 191227\ 行数判断.js 882</span><br><span class="line">1行:882</span><br><span class="line">2行:441</span><br><span class="line">3行:294</span><br><span class="line">6行:147</span><br><span class="line">7行:126</span><br><span class="line">9行:98</span><br><span class="line">14行:63</span><br><span class="line">18行:49</span><br><span class="line">21行:42</span><br><span class="line">42行:21</span><br><span class="line">49行:1</span><br></pre></td></tr></table></figure><ol start="4"><li>大概排除一下，盲猜应该是属于 14、18、21 这三个比较有可能，我直接用 21 来演示：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">fold -w 42 news.txt &gt; flag.txt</span><br><span class="line">111111111111110000110011110011111111111111</span><br><span class="line">110000000000110011110011000011000000000011</span><br><span class="line">110011111100110011110000110011001111110011</span><br><span class="line">110011111100110000110011000011001111110011</span><br><span class="line">110011111100110011000000110011001111110011</span><br><span class="line">110000000000110011000011110011000000000011</span><br><span class="line">111111111111110011001100110011111111111111</span><br><span class="line">000000000000000011111111110000000000000000</span><br><span class="line">111100110000111100111100000011111100111100</span><br><span class="line">000011000011000011111100001100111100111111</span><br><span class="line">110000111100111111001100110000110000110011</span><br><span class="line">001100000011001100000011000011111111001100</span><br><span class="line">001100110000111111000000110000001100001111</span><br><span class="line">000000000000000011001111001111110011000011</span><br><span class="line">111111111111110011110000001111111100111100</span><br><span class="line">110000000000110000000011110000111100000011</span><br><span class="line">110011111100110000000011001100001100001100</span><br><span class="line">110011111100110011001100000000111111001111</span><br><span class="line">110011111100110000000000111100111111000011</span><br><span class="line">110000000000110011110011001100110011000000</span><br><span class="line">111111111111110011000000000011000000001100</span><br></pre></td></tr></table></figure><ol start="5"><li>恢复正常二维码并扫描得到 flag</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">空格替换为数字0：sed -i &#39;&#39; -e &#39;s&#x2F;0&#x2F; &#x2F;g&#39; flag.txt</span><br><span class="line">井号替换为数字1：sed -i &#39;&#39; -e &#39;s&#x2F;1&#x2F;#&#x2F;g&#39; flag.txt</span><br></pre></td></tr></table></figure><p>ACSII 二维码在网页上显示字符密度较低无法扫描，可能需要用文本编辑器稍微缩放一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">##############    ##  ####  ##############</span><br><span class="line">##          ##  ####  ##    ##          ##</span><br><span class="line">##  ######  ##  ####    ##  ##  ######  ##</span><br><span class="line">##  ######  ##    ##  ##    ##  ######  ##</span><br><span class="line">##  ######  ##  ##      ##  ##  ######  ##</span><br><span class="line">##          ##  ##    ####  ##          ##</span><br><span class="line">##############  ##  ##  ##  ##############</span><br><span class="line">                ##########                </span><br><span class="line">####  ##    ####  ####      ######  ####  </span><br><span class="line">    ##    ##    ######    ##  ####  ######</span><br><span class="line">##    ####  ######  ##  ##    ##    ##  ##</span><br><span class="line">  ##      ##  ##      ##    ########  ##  </span><br><span class="line">  ##  ##    ######      ##      ##    ####</span><br><span class="line">                ##  ####  ######  ##    ##</span><br><span class="line">##############  ####      ########  ####  </span><br><span class="line">##          ##        ####    ####      ##</span><br><span class="line">##  ######  ##        ##  ##    ##    ##  </span><br><span class="line">##  ######  ##  ##  ##        ######  ####</span><br><span class="line">##  ######  ##          ####  ######    ##</span><br><span class="line">##          ##  ####  ##  ##  ##  ##      </span><br><span class="line">##############  ##          ##        ##</span><br></pre></td></tr></table></figure><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>嫌不够难的话，把 base64 结果大小写互转一下，decode 一下懵逼了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var text &#x3D; process.argv[2];</span><br><span class="line">var text &#x3D; text.split(&quot;&quot;);</span><br><span class="line"></span><br><span class="line">for(var i&#x3D;0;i&lt;text.length;i++)&#123;</span><br><span class="line">if(text[i] &#x3D;&#x3D; text[i].toLowerCase())text[i]  &#x3D; text[i].toUpperCase();</span><br><span class="line">else if(text[i] &#x3D;&#x3D; text[i].toUpperCase())text[i] &#x3D; text[i].toLowerCase();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">text &#x3D; text.join(&quot;&quot;);</span><br><span class="line">console.log(&quot;\n大小写互换之后的结果是：\n&quot;+text);</span><br></pre></td></tr></table></figure><p>大小写转换后的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h4SiaphRcv4aa4vswW7aiaJ732NK&#x2F;PEBzMg0PuqsdCQRbsjq1PzZF3QiRf&#x2F;qj99L</span><br><span class="line">Q1J0tb1T6LK+n8+S6hmYtKtfojKDh89Cy51fAXBw&#x2F;Op3pigPR5Zd9uxZ+04RiMAG</span><br><span class="line">dkFj9x4YC90AROH7GNfAr7eZ+Z7j3NUFu6V5xEP7WGX9xTsEf2Yr0oXZaWaa</span><br></pre></td></tr></table></figure><p>进行 base64 decode 后的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">���j�Qr�k���nډ�&#123;�cJ����4&gt;�t$n�����t&quot;E���KCRt��S貾�ϒ����_�2���B˝_pp��w�(G�]��Y�N��vAc�</span><br><span class="line">                  �D�������������y�C�Xe��;f+҅�if�%</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;昨天晚上没睡着突然有个这么个想法，觉得还行，故意挖了个坑会让人觉得这是个二进制去处理&lt;/p&gt;
&lt;link href=&quot;http://apps.bdimg.com/libs/highlight.js/9.1.0/styles/default.min.css&quot; rel=&quot;stylesheet&quot;&gt;
&lt;script src=&quot;http://apps.bdimg.com/libs/highlight.js/9.1.0/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://jameshopbourn.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF 二维码行列重排</title>
    <link href="https://jameshopbourn.github.io/2019/12/30/QRCode%20Resort/"/>
    <id>https://jameshopbourn.github.io/2019/12/30/QRCode%20Resort/</id>
    <published>2019-12-30T03:45:00.000Z</published>
    <updated>2022-05-25T00:36:44.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>打死出题人系列：Flag 生成 ACSII 字符文本，文本使用01替换后进行行列重排。</p><a id="more"></a><h2 id="文本预处理"><a href="#文本预处理" class="headerlink" title="文本预处理"></a>文本预处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">生成 ACSII 字符：</span><br><span class="line">qrencode -t ASCII &#39;flag:jbcool&#39; &gt; flag.txt</span><br><span class="line">删除所有的空白行：</span><br><span class="line">sed -i &#39;&#39; -e &#39;&#x2F;^[  ]*$&#x2F;d&#39; flag.txt</span><br><span class="line">删除前后 8 个空格：</span><br><span class="line">sed -i &#39;&#39; -Ee &#39;s&#x2F;^[ ]&#123;8&#125;&#x2F;&#x2F;g&#39; -Ee &#39;s&#x2F;[ ]&#123;8&#125;$&#x2F;&#x2F;g&#39; flag.txt</span><br><span class="line">替换井号和空格：</span><br><span class="line">sed -i &#39;&#39; -e &#39;s&#x2F; &#x2F;0&#x2F;g&#39; -e &#39;s&#x2F;#&#x2F;1&#x2F;g&#39; flag.txt</span><br><span class="line"></span><br><span class="line">sed 命令整合版：</span><br><span class="line">sed -i &#39;&#39; -e &#39;&#x2F;^[  ]*$&#x2F;d&#39; -Ee &#39;s&#x2F;^[ ]&#123;8&#125;&#x2F;&#x2F;g&#39; -Ee &#39;s&#x2F;[ ]&#123;8&#125;$&#x2F;&#x2F;g&#39; -e &#39;s&#x2F; &#x2F;0&#x2F;g&#39; -e &#39;s&#x2F;#&#x2F;1&#x2F;g&#39; flag.txt</span><br></pre></td></tr></table></figure><h2 id="批处理脚本"><a href="#批处理脚本" class="headerlink" title="批处理脚本"></a>批处理脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim resort.sh &amp;&amp; chmod 755 resort.sh &amp;&amp; .&#x2F;resort.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;&#39; -e &#39;s&#x2F;\(.\)&#x2F;\1 &#x2F;g&#39; flag.txt</span><br><span class="line"></span><br><span class="line">chac&#x3D;$(wc -c flag.txt | awk &#39;&#123;print $1&#125;&#39;)</span><br><span class="line">line&#x3D;$(wc -l flag.txt | awk &#39;&#123;print $1&#125;&#39;)</span><br><span class="line">line&#x3D;$(echo  $chac&#x2F;$line-1 | bc) #行数减一是有一个换行符</span><br><span class="line">line&#x3D;$(echo  $line&#x2F;2 | bc) #行数除二是中间有空格</span><br><span class="line"></span><br><span class="line">if [ ! -f &quot;sort.txt&quot; ]; then #sort.txt 文件处理</span><br><span class="line">touch &quot;sort.txt&quot;</span><br><span class="line">else</span><br><span class="line">rm &quot;sort.txt&quot;</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">for ((i&#x3D;1;i&lt;&#x3D;$line;i++))</span><br><span class="line">do</span><br><span class="line">cut -d &#39; &#39; -f$i flag.txt &gt; $i.txt</span><br><span class="line">tr &quot;\n&quot; &quot; &quot;  &lt; $i.txt &gt; $i-bak.txt</span><br><span class="line">rm $i.txt</span><br><span class="line">echo &#96;cat $i-bak.txt&#96; &gt;&gt; sort.txt</span><br><span class="line">rm $i-bak.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">sed -i &#39;&#39; -e &#39;s&#x2F; &#x2F;&#x2F;g&#39; sort.txt</span><br></pre></td></tr></table></figure><h2 id="原始码："><a href="#原始码：" class="headerlink" title="原始码："></a>原始码：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 </span><br><span class="line">1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 </span><br><span class="line">1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 </span><br><span class="line">1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 </span><br><span class="line">1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 </span><br><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 </span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 </span><br><span class="line">1 1 1 1 0 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 0 0 </span><br><span class="line">0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 </span><br><span class="line">1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 1 </span><br><span class="line">0 0 1 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 </span><br><span class="line">0 0 1 1 0 0 1 1 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 </span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 1 </span><br><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 </span><br><span class="line">1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 0 0 1 1 </span><br><span class="line">1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 1 1 0 0 0 0 1 1 0 0 </span><br><span class="line">1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 </span><br><span class="line">1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 0 1 1 </span><br><span class="line">1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 0 0 0 0 </span><br><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0</span><br></pre></td></tr></table></figure><h2 id="重排后："><a href="#重排后：" class="headerlink" title="重排后："></a>重排后：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">11111101010001111111</span><br><span class="line">11111101010001111111</span><br><span class="line">10000101001101000001</span><br><span class="line">10000101001101000001</span><br><span class="line">10110100100001011101</span><br><span class="line">10110100100001011101</span><br><span class="line">10110101010101011101</span><br><span class="line">10110101010101011101</span><br><span class="line">10110100010001011101</span><br><span class="line">10110100010001011101</span><br><span class="line">10000100101001000001</span><br><span class="line">10000100101001000001</span><br><span class="line">11111101010101111111</span><br><span class="line">11111101010101111111</span><br><span class="line">00000001011100000000</span><br><span class="line">00000001011100000000</span><br><span class="line">01111110110111001011</span><br><span class="line">01111110110111001011</span><br><span class="line">11100011100001000010</span><br><span class="line">11100011100001000010</span><br><span class="line">00000111110010001000</span><br><span class="line">00000111110010001000</span><br><span class="line">11001010001010110010</span><br><span class="line">11001010001010110010</span><br><span class="line">10111110010100100100</span><br><span class="line">10111110010100100100</span><br><span class="line">00000000100011010110</span><br><span class="line">00000000100011010110</span><br><span class="line">11111101001011000001</span><br><span class="line">11111101001011000001</span><br><span class="line">10000101111011101110</span><br><span class="line">10000101111011101110</span><br><span class="line">10110101101101111100</span><br><span class="line">10110101101101111100</span><br><span class="line">10110100001010001110</span><br><span class="line">10110100001010001110</span><br><span class="line">10110101110001000000</span><br><span class="line">10110101110001000000</span><br><span class="line">10000101101101011001</span><br><span class="line">10000101101101011001</span><br><span class="line">11111100110110101100</span><br><span class="line">11111100110110101100</span><br></pre></td></tr></table></figure><h2 id="base64-编码"><a href="#base64-编码" class="headerlink" title="base64 编码"></a>base64 编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat sort.txt | gzip &gt; new.zip</span><br><span class="line">openssl base64 -in new.zip &gt; base.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">H4sIAGO7Cl4AA82TURKEIAxD&#x2F;z1Nev&#x2F;L7UpSKkyD+7kwqDwmLQ0INO3q4H&#x2F;QYMPd</span><br><span class="line">Ac0cHZLBgivfD0upJ9Dshc7+A4XGmTILKqWnj4qj9aFomsc8u78bDer05rKhQaHk</span><br><span class="line">ehiqXCE1h6GzAKgMxW2p6ix7Ao7OW8T9MYih5aRyba4vtHzUUY4IhkbmkKfa74Hm</span><br><span class="line">dV0j9FTm599iaO5s1rtUsdDI03lgQz9sh3NCTAQAAA&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;打死出题人系列：Flag 生成 ACSII 字符文本，文本使用01替换后进行行列重排。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://jameshopbourn.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>图片标注实践</title>
    <link href="https://jameshopbourn.github.io/2019/11/02/macOS%20OmniGraffle%20Practice/"/>
    <id>https://jameshopbourn.github.io/2019/11/02/macOS%20OmniGraffle%20Practice/</id>
    <published>2019-11-02T03:00:00.000Z</published>
    <updated>2022-05-25T00:36:44.230Z</updated>
    
    <content type="html"><![CDATA[<p>绘图一直以来都是我的弱项，为了弥补这一弱点，在 @scomper 的博客上学习了 OmniGraffle 之后也能做出一张质量上还算及格的图片，本文将用一个我目前做过最复杂的例子来概括一下一些常用的操作。</p><a id="more"></a><p>首先，明确需求：在《信息管理收集系统构架思路》一文中有一段话如下：</p><blockquote><p>和以往一样，能用键盘解决，就不麻烦到鼠标。于是再次派上 AppleScript + Keyboard Maestro，由于 Bear 官方有 Safari 扩展，所需我们也就无需再去添加 JavaScript 书签了。此处的 AppleScript 代码需要根据你扩展插件摆放的位置自行进行微调。如下图所示：<br>那么由这段话推出需要配的示例图上应该有以下几个元素：</p></blockquote><ol><li>AppleScript 代码</li><li>Bear 扩展的图标</li><li>用数字把扩展插件摆放位置做一个直观的表现</li></ol><h2 id="本文将会带你达成的目标："><a href="#本文将会带你达成的目标：" class="headerlink" title="本文将会带你达成的目标："></a>本文将会带你达成的目标：</h2><ol><li>使用 Snagit 或者 Snipaste 进行窗口截图</li><li>使用 Snipaste 的钉板功能将图片钉在窗口上</li><li>使用 Snagit 进行快速高效的数字标注</li><li>使用系统的预览软件删除多余的元素</li><li>使用 OmniGraffle 给文本添加高亮</li><li>使用 OmniGraffle 连线工具链接两个元素</li><li>使用 OmniGraffle 的掩模功能使用图片裁剪</li></ol><h2 id="软件支持："><a href="#软件支持：" class="headerlink" title="软件支持："></a>软件支持：</h2><ol><li>Snagit 或者 Snipaste：用于局部窗口精确截取以及图片粘贴。</li><li>系统自带的预览：用于删除图片多余的元素。</li><li>Snagit 或者 OmniGraffle：用于给 Safari 扩展添加数字标签。</li><li>Snagit 或者 OmniGraffle：用于标注。</li></ol><p>我的配置：Snagit + Snipaste + 预览 + OmniGraffle。</p><p>操作：首先使用 Snagit 在 Keyboard Maestro 窗口中进行截图，本以为可以直接把代码那个窗口截取出来，结果发现最小的窗口只能在动作的区域，所以不得已截取了动作的完整窗口。<br><img src="/media/AppleScriptSafari/1%E5%B1%80%E9%83%A8%E6%88%AA%E5%9B%BE.png"></p><p>那么既然已经截取了这样一个完整的窗口，含有其他多余的元素，就需要使用到系统自带的预览删除这些多余元素。将截图保存下来并使用预览打开。<br><img src="/media/AppleScriptSafari/2%E5%88%A0%E9%99%A4%E5%A4%9A%E4%BD%99.png"></p><p>用鼠标拖动，将多余部分用虚线框框起来，然后按下 delete 回车删除多余元素，对上面分别进行如此操作。<br><img src="/media/AppleScriptSafari/3%E5%88%A0%E9%99%A4%E7%99%BD%E8%BE%B9.png"></p><p>现在上下两部分的多余元素均已被删除干净，还需要将旁边的白边去掉。打开图片编辑工具，选择「即时 Alpha」功能，将外围白边圈起来再次按下 delete 删除，保存最后 command + C 将这张图片复制到剪切板。<br><img src="/media/AppleScriptSafari/4.0%E7%B2%98%E8%B4%B4%E8%BE%B9%E6%A1%86.png"></p><p>打开 Safari 浏览器，按下 Snipaste 的默认粘贴键：fn + F3 即可把剪切板里面的图片钉在当前的屏幕上，但是此时你会发现旁边有两条黑线，在图片上右键将「Shadow」取消勾选即可实现边缘完全透明。</p><p>效果如下图所示，此时你可以单击一下钉住的图片然后使用触控板双指上下滑动可以调整图片的大小并拖动到合适的位置，最后按下 command + shift + 4 进行截屏。<br><img src="/media/AppleScriptSafari/5%E5%9B%BE%E7%89%87%E9%92%89%E4%BD%8F.jpg"></p><p>将图片导入 Snagit 进行序号标注，使用 Snagit 进行图片标注的优点就是数字会自动递增，不用一个个编辑过去，更加高效一点。记得使用参考线进行对齐，可以做出更美观的效果。<br><img src="/media/AppleScriptSafari/6%E6%89%A9%E5%B1%95%E5%BA%8F%E5%8F%B7.png"></p><p>数字标注完成后选择右上角的 Copy All 复制到剪切板。<br><img src="/media/AppleScriptSafari/7%E5%8F%82%E8%80%83%E5%AF%B9%E9%BD%90.jpg"></p><p>然后打开 OmniGraffle 粘贴一下开始进行下一步编辑，使用矩形框工具在「group 8」上面画上一个高亮的框框，我的设置如下：</p><p>纯色填充，颜色使用柠檬黄<br>填充选项使用「乘」<br>取消掉矩形边框的描边，形状选择矩形<br><img src="/media/AppleScriptSafari/8%E8%BE%B9%E6%A1%86%E7%BC%96%E8%BE%91.jpg"></p><p>接下来，再次使用矩形工具在数字 8 下面画出一个非常小的矩形，如图所示<br><img src="/media/AppleScriptSafari/9%E9%80%8F%E6%98%8E%E7%9F%A9%E5%BD%A2.png"></p><p>参数设定：使用白色填充并且将不透明度设置为 0，取消描边。</p><p>使用连线工具（默认按键是 3 ）链接这两个矩形框，参数设置：</p><p>线条宽度：5<br>颜色：keyboardFocusIndicatorColor<br>线条：弯曲并使用一个箭头<br><img src="/media/AppleScriptSafari/10%E8%BF%9E%E6%8E%A5%E5%85%83%E7%B4%A0.png"></p><p>点击透明边框，调整一下合适的位置，我是强迫症，要做就一定做的完美。调整到下面的正中间位置（可以使用键盘上的上下左右进行调整）。<br><img src="/media/AppleScriptSafari/11%E8%B0%83%E6%95%B4%E4%BD%8D%E7%BD%AE.png"></p><p>终于完成了标注工作，可是这样一张图片直接放在文章里面会有一个问题：我想体现的元素都在上面一部分，跟下面一点关系都没有，这张图片的下半部分完全就是多余的，所以我们还需要对它进行裁剪一下。<br><img src="/media/AppleScriptSafari/14%E6%A0%87%E6%B3%A8%E5%AE%8C%E6%88%90.jpg"></p><p>点击图片，右键选择「掩模图像」。<br><img src="/media/AppleScriptSafari/15%E8%A3%81%E5%89%AA%E5%B1%80%E9%83%A8.jpg"></p><p>调整边角上的小正方形进行裁剪图片，这里只需要截取上半部分即可。选择好后点击一下旁边的空白区域即可推出掩模图像功能。<br><img src="/media/AppleScriptSafari/16%E6%8E%A9%E6%A8%A1%E5%9B%BE%E5%83%8F.jpg"></p><p>使用 command + shift +G 合并图层中的所有元素，比如说我们画的两个矩形和一条曲线，然后 command + A 全选，接着右键选择拷贝为 PNG。<br><img src="/media/AppleScriptSafari/17%E5%85%A8%E9%83%A8%E5%AF%BC%E5%87%BA.jpg"></p><p>随便找个聊天窗口粘贴图片，然后右键选择导出，经过十八个步骤终于弄出来一张满意的成品图……</p><p>导出图片<br>示例图迭代：<br><img src="/AppleScriptSafari/%E5%8E%9F%E5%9B%BE.jpg"><br>缺点：</p><ol><li>使用圆圈数字标注没有上面的效果优秀</li><li>采用了橘色标注，导致「group 8」这几个字符有点要被深色掩盖了</li><li>线条没有连接到数字 8 的正下方</li><li>AppleScript 代码有白边</li></ol><p><img src="/media/AppleScriptSafari/%E4%BA%8C%E5%9B%BE.jpg"><br>缺点：</p><ol><li>使用黄底白字，导致数字根本无法看清，根本无法起到标注的效果</li><li>线条使用了橙色，在这种情况下不是非常适合。</li></ol><p><img src="/media/AppleScriptSafari/19%E6%88%90%E5%93%81%E5%9B%BE%E7%89%87.png"><br>优点：</p><ol><li>使用黑底白字，数字标注非常显眼，一目了然</li><li>线条使用了蓝色并稍微增大了宽度，更加饱满</li><li>代码边缘没有白边，非常干净。</li><li>使用柠檬黄标注「group 8」字符，非常显眼，能够一下子抓住读者的眼球。</li></ol><p>好的设计都不是一次完成的，而是经历过不断的迭代、更新最后精心打磨出来的成品，正如我所写的《信息管理收集系统构架思路》一文，也是我这半年来各种想法的总结、整理。</p><p>推荐：@scomper 的 OmniGraffle 的教程《用 OmniGraffle 画一个精美的图示》在少数派上可以进行试读、订阅。这个圈子里面如果要问说谁做图是最优秀的我心中的答案非 scomper 莫属，你可以在这里浏览他曾经做过的各种示例图：<a href="http://scomper.me/diagram/" target="_blank" rel="noopener">http://scomper.me/diagram/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;绘图一直以来都是我的弱项，为了弥补这一弱点，在 @scomper 的博客上学习了 OmniGraffle 之后也能做出一张质量上还算及格的图片，本文将用一个我目前做过最复杂的例子来概括一下一些常用的操作。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="OmniGraffle" scheme="https://jameshopbourn.github.io/tags/OmniGraffle/"/>
    
  </entry>
  
</feed>
